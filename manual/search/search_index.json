{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to Trackerboy Trackerboy is a cross-platform music tracker for creating Gameboy music. This documentation serves as the user manual for the program, as well as a primer on the gameboy sound hardware. Quick links The program's interface Details about the tracker A primer on the hardware Effect list Shortcuts Frequently asked questions (FAQ) Change log Contact / Support If you need help feel free to join the official trackerboy discord and ask your question in the #help channel. You can also contact me via email or twitter. Discord : https://discord.gg/m6wcAK3 Website : https://www.trackerboy.org Source code : https://github.com/stoneface86/trackerboy Email : stoneface8086 @ gmail.com (Please include \"trackerboy\" in the subject line) Twitter : @stoneface86 Download this manual Click here to download an offline copy of this manual.","title":"Home"},{"location":"#welcome-to-trackerboy","text":"Trackerboy is a cross-platform music tracker for creating Gameboy music. This documentation serves as the user manual for the program, as well as a primer on the gameboy sound hardware.","title":"Welcome to Trackerboy"},{"location":"#quick-links","text":"The program's interface Details about the tracker A primer on the hardware Effect list Shortcuts Frequently asked questions (FAQ) Change log","title":"Quick links"},{"location":"#contact-support","text":"If you need help feel free to join the official trackerboy discord and ask your question in the #help channel. You can also contact me via email or twitter. Discord : https://discord.gg/m6wcAK3 Website : https://www.trackerboy.org Source code : https://github.com/stoneface86/trackerboy Email : stoneface8086 @ gmail.com (Please include \"trackerboy\" in the subject line) Twitter : @stoneface86","title":"Contact / Support"},{"location":"#download-this-manual","text":"Click here to download an offline copy of this manual.","title":"Download this manual"},{"location":"faq/","text":"Frequently asked questions The following are some answers to some common questions about Trackerboy. General How do I get started? You could create some instruments, make a couple for each channel to explore the hardware's capabilities. Or you can dive right in and start entering notes on the pattern editor. Unlike some other trackers, instruments are 100% optional (but recommended!) to make music. Is there a macOS release? Currently no, I do not provide macOS releases as I cannot test them. You can build from source or use the windows release via WINE. If you do use WINE, change the audio API in the Sound / Midi configuration to DirectSound or WinMM as the WASAPI backend does not work in WINE. A button I want to use is grayed out, what do I do? The feature you are attempting to use is most likely not implemented at this time, you will have to wait for a newer release. Editing How do I enter notes? Focus on the pattern editor and hit Space to toggle record mode, the cursor row will change color to red when in record mode. You can now enter notes using your keyboard. How do I play and loop a single pattern? Select the pattern you want to play and enable repeat-mode (Tracker > Pattern repeat), then play the song. I don't have a QWERTY keyboard, can I change the default layout? Yes, open the configuration (File > Configuration) and select the Keyboard tab. You can choose your layout in the combobox or setup a custom one if yours is not provided. Why are the notes on CH3 one octave lower? CH3's frequency range is one octave lower than the pulse channels if you have a single period waveform. Notes in trackerboy are based on the octave range of the pulse channels. See Wave channel for more details. Troubleshooting Sound is stuttering or clicking. The buffer length is too short, and underruns are occuring. Check your sound settings, gradually increase the buffer size until the problem is fixed. Also make sure that the buffer size is at least twice the size of the period. There's no sound. Try a different device and/or api in the sound settings. My device disconnected and the tracker won't stop playing. Kill sound (Tracker > Kill Sound) and select a new device in the audio settings or the same device after reconnecting it.","title":"FAQ"},{"location":"faq/#frequently-asked-questions","text":"The following are some answers to some common questions about Trackerboy.","title":"Frequently asked questions"},{"location":"faq/#general","text":"How do I get started? You could create some instruments, make a couple for each channel to explore the hardware's capabilities. Or you can dive right in and start entering notes on the pattern editor. Unlike some other trackers, instruments are 100% optional (but recommended!) to make music. Is there a macOS release? Currently no, I do not provide macOS releases as I cannot test them. You can build from source or use the windows release via WINE. If you do use WINE, change the audio API in the Sound / Midi configuration to DirectSound or WinMM as the WASAPI backend does not work in WINE. A button I want to use is grayed out, what do I do? The feature you are attempting to use is most likely not implemented at this time, you will have to wait for a newer release.","title":"General"},{"location":"faq/#editing","text":"How do I enter notes? Focus on the pattern editor and hit Space to toggle record mode, the cursor row will change color to red when in record mode. You can now enter notes using your keyboard. How do I play and loop a single pattern? Select the pattern you want to play and enable repeat-mode (Tracker > Pattern repeat), then play the song. I don't have a QWERTY keyboard, can I change the default layout? Yes, open the configuration (File > Configuration) and select the Keyboard tab. You can choose your layout in the combobox or setup a custom one if yours is not provided. Why are the notes on CH3 one octave lower? CH3's frequency range is one octave lower than the pulse channels if you have a single period waveform. Notes in trackerboy are based on the octave range of the pulse channels. See Wave channel for more details.","title":"Editing"},{"location":"faq/#troubleshooting","text":"Sound is stuttering or clicking. The buffer length is too short, and underruns are occuring. Check your sound settings, gradually increase the buffer size until the problem is fixed. Also make sure that the buffer size is at least twice the size of the period. There's no sound. Try a different device and/or api in the sound settings. My device disconnected and the tracker won't stop playing. Kill sound (Tracker > Kill Sound) and select a new device in the audio settings or the same device after reconnecting it.","title":"Troubleshooting"},{"location":"about/changelog/","text":"Change log [0.6.0] - 2022-03-03 Added Command line argument parsing, you can now open a module on application startup General tab in Config dialog for changing basic settings. Appearance tab in Config dialog for changing fonts, colors and other settings Keyboard tab in Config dialog for changing keyboard layout and editing keybinds, as well as shortcut key sequences. Colors for the audio scope and graph editors are now customizable Autosave. Disabled by default, enable in the General tab in Config. Jxy effect for setting the global volume scale. Menu action in Tracker for reseting the global volume (Tracker|Reset global volume) Context menu for pattern editor Action for replacing all selected instrument columns with the current instrument (Edit|Replace instrument) Changed Combined the Sound and Midi tabs in the Configuration dialog (Sound + MIDI) AZERTY keyboard layout uses French AZERTY QWERTZ keyboard layout uses German T3 CascadiaMono is no longer the default font (Windows) Consolas is now the default font, falling back to Courier New if not available No longer using dock widgets, Instruments + Waveforms are now located to the right of the pattern editor. Pattern editor row numbers can be displayed in decimal (default is hexadecimal) Cursor wrap can now be disabled in General settings Hxx effect (set sweep register) now works. Crash save filename no longer using colons in the timestamp (this resulted in using an illegal filename on windows). Follow-mode is now accessible from the Tracker menu Selecting an instrument/waveform will switch to that item in its editor if it is open. Module properties dialog can now be opened via Ctrl+P Fixed Issue with Instrument Editor not properly updating when changing instruments Hitting enter in the sequence editor line edit opens the Wave editor Bug when saving a new module overwrites the last opened one instead of prompting the user for a new location. Song editor not updating on song change. Removed Synthesizer quality setting in Sound configuration [0.5.0] - 2021-09-10 Added Instrument + Waveform list views for selecting/adding instruments/waveforms Effect columns can now be hidden/added for each track Multiple song support, modules can now store 1-256 songs Backwards compatibilty for 0.0 (Rev A) modules Tempo calculator dialog (Song > Tempo calculator...) Crash handler. Attempts to save a copy of the module after a fatal error Module properties dialog for editing the song list, module information and framerate/system. Song next/previous actions for changing the current song Song selector in Sidebar for selecting the current song Comments dialog for editing module comments File menu now shows a list of recently opened/saved modules Changed Back to using miniaudio instead of RtAudio for audio playback Trackerboy is now SDI instead of MDI (only one module can be open at a time). Initial window size is set to a maximum of 1280x720 Module file format is now at 1.0 (Rev B) Config file is now more human friendly Redesigned header for the pattern editor Reduced spacing between columns in pattern editor Rewrote OrderEditor using a custom widget instead of QTableView + OrderModel Instrument and Waveform editors are now dialogs instead of docks. Octave decrease/increase shortcut changed from numpad / * to Ctrl+[ and Ctrl+] Fixed issue #2 - Exx not taking immediate effect (also fixes V0x and I0x not taking immediate effect as well) issue #3 - PulseAudio hang Removed Module tree view (replaced by instrument and waveform docks) Instrument select toolbar (functionality replaced by selecting an instrument in the instruments dock) Patterns and Tempo spinboxes in Song settings editor [0.4.0] - 2021-07-07 Added MIDI support. You can now use a MIDI input device to input notes / preview instruments Order editor has increment/decrement and set operations again Oscilloscope visualizer Icons for cut/copy/paste Changed 32-bit builds are now supported Using RtAudio instead of miniaudio for audio playback Some improvements to the audio diagnostics dialog Fxx effect changes the speed immediately now (previously it only took effect on the next row) Status bar is now updated with speed/tempo, time elapsed and position of current song being played. Cursor row is locked when playing in follow-mode Selecting an order while playing in follow-mode jumps to it Fixed Crash when creating new module on linux Copy/Paste bugs when copying effect columns [0.3.1] - 2021-06-23 Changed Play and stop shortcut only triggers when pattern editor has focus Fixed Note previews not working right on CH4 Current track not updating in order editor [0.3.0] - 2021-06-22 Added Note previews when inputting notes in the pattern editor Pattern repeat mode Step mode playback Input toolbar (set the octave and edit step) Instrument toolbar (combobox for the current instrument) Song menu, contains actions for adding/removing orders Sidebar widget, combines song settings + order editor Icon for configuration Keybinds for tracker actions (play, stop, etc) Add \"play and stop\" shortcut (pressing enter plays, pressing it again stops) Changed No longer need to have record mode on when deleting, transposing, etc (record mode now only applies to setting notes, instruments and effects) Arpeggio editor graph is now centered at 0 Moved stuff from PatternEditor to separate toolbars Renamed Delete action in Edit menu to Erase View menu is now between Tracker and Window Fix \"set volume on trigger\" checkbox not updating when changing instruments Fix pattern previews not showing up on module load Fix order move up/down actions not disabling/enabling when user changes patterns Setting a note cut does not set the instrument column Removed PatternEditor toolbar (now is part of the main application toolbar) Order increment/decrement and set controls [0.2.0] - 2021-06-15 The project has changed dramatically since the last release so changes will not be listed for this version. Here's a quick list of features: Open/save modules, can have multiple modules open at once Edit pattern data via keyboard (OpenMPT style keybindings, will be configurable in later versions) Transpose selection by note/octave or by a custom semitone offset (Ctrl+T) Reverse selected rows (Ctrl+R) Cut/Copy/Paste pattern data using system clipboard Mix paste (only the unset columns get set to the pasted data) Move pattern data via drag n drop Music playback, pattern cursor follows the current playing row Edit waveforms visually via a graph control, by selecting a preset or by manually entering waveram data Edit instrument sequences visually Instruments and Waveforms can be previewed using the piano control (or by keyboard). Undo/Redo functionality for song order and pattern editing. Audio diagnostics dialog (Help > Audio Diagnostics) for debugging sound output / buffer issues. [0.1.0] - 2020-09-20 Added The main UI has been started Wave editor dialog, user can edit waveforms and preview them using a piano control Configuration dialog, user can select an audio device, set buffer size and volume Instrument editor dialog DeviceManager and DeviceTable classes in the audio library demo_device_manager demo lists all available host api and output devices Changed PlaybackQueue can use any portaudio device instead of the default one Reorganized library header folders MusicRuntime only updates \"locked\" channels Rewrote Engine class to use MusicRuntime class Removed File class Old ui code (instedit) [0.0.6] - 2020-08-09 Added song_demo, demonstrates playback of a Song Engine class, handles playback for Songs and sound effects FrequencyControl, frequency effect logic for channels 1, 2 and 3 Note lookup table for channel 4, NOTE_NOISE_TABLE MusicRuntime, handles song playback (replaces SongRuntime + PatternRutime + TrackRuntime) NoteControl, handles note triggers and cuts with an optional delay. PatternCursor, utility class for random access/iteration of a Pattern RuntimeContext struct, utility struct containing Synth and Table references Timer class, used for tempo/speed Changed Fixed warnings for ubuntu build Mixer no longer uses sigma approximation when calculating the STEP_TABLE, this was done as an experiment and also worked as a low pass filter. Filtering will be done elsewhere in the future. added utility method Synth::setFrequency added several new effects. Effects are now categorized by pattern, track and frequency. Removed InstrumentRuntime, TrackRuntime, PatternRuntime and SongRuntime classes. These are being replaced with the newly added classes in the engine folder. Q53.hpp, replaced by Speed.hpp [0.0.5] - 2020-04-24 Added PatternMaster class, container for all tracks in a Song Synth::reset() and for all APU components also Changed Instruments are now a sequence of commands, 1 command per frame All runtime classes have been rewritten to use the new pattern format Song serialization has been rewritten to use new pattern format File format signature changed so that it starts with a non-printable character TrackRuntime and InstrumentRuntime are now template classes Patterns function like FamiTracker's, a pattern is a combination of resuable track data Pattern is now a tuple of Track references Order is now a POD struct of track ids, one for each channel Track no longer behaves like an iterator and now contains data pattern demo now plays a recreation of national park from pokemon G/S/C implemented writeAll method in PlaybackQueue PlaybackQueue uses standard library for sleeping instead of using Pa_Sleep Synth methods now have noexcept and const qualifiers where applicable Fix issue in Wav writer, where the sample count in the fact chunk was incorrect for multichannel data. The Mixer and Synth sampling rates can now be changed SongRuntime is now single-use, or, you can no longer set a new song Removed Instruction struct, no longer needed PatternRuntime::reset() [0.0.4] - 2020-04-01 Added Wav class, for writing wav files (only supports 32-bit float format) Generator class, base class for PulseGen, WaveGen and NoiseGen PulseGen class, similar to the previously removed PulseChannel WaveGen class, similar to the previously removed WaveChannel Mixer class, adds bandlimited steps to left/right channels Sequencer class, similar to the previously removed one Changed Minimum required C++ standard is now C++17 PlaybackQueue uses float samples instead of int16_t Synth was rewritten to use emulation based synthesis, generates samples on a per frame basis. Synth can now read and write APU registers reset() renamed to restart() in synth APU components setRegister renamed to writeRegister Sweep has its own shadow register and now longer uses the channel's on trigger (this behavior now matches the hardware) Sweep and Envelope register contents get applied on restart Removed include/trackerboy/synth/utils.hpp, no longer being used libtrackerboy/synth/test_Osc.cpp, was unused Osc, PulseOsc and WaveOsc, since we are now using emulation based synthesis [0.0.3] - 2020-03-09 Added More test cases for File tests for Table<T> misc/genstep.py, similar to gensinc.py, generates bandlimited step sets for Osc implementation for WaveOsc NoiseGen, buffered version of NoiseChannel Envelope, moved code from EnvChannel here (will replace EnvChannel) Sweep class, replaces SweepPulseChannel HardwareFile struct (replaces ChannelFile) Changed Fix exception being thrown when attempting to insert into table of size one less than maximum Rewrote Osc class. Subclasses must edit the delta buffer manually instead of using deltaSet . Osc no longer uses sinc sets. It uses bandlimited steps instead, similiar to blargg's http://www.slack.net/~ant/bl-synth/11.implementation.html. Osc::generate uses floats for samples instead of int16_t. Samples range from -1.0-1.0, exceeding both limits due to overshoot (so volume will need to be adjusted or clipping will occur). Mixer no longer emulates terminal volume/panning (tracker doesn't use it) Mixer works with sample buffers as opposed to individual samples from each channel Length counters are no longer emulated by the Synth Mixer and Sequencer were moved into Synth, as only the synth used these internally. Removed Osc::deltaSet as only WaveOsc needed this method Osc::setMute and Osc::muted , replaced by Osc::disable and Osc::disabled misc/gensinc.py no longer needed, replaced by genstep.py Channel, EnvChannel, PulseChannel, SweepPulseChannel, WaveChannel, NoiseChannel, ChannelFile, Mixer and Sequencer classes [0.0.2] - 2020-02-05 Added File::loadTable<T> method uint16_t overload for correctEndian Destructor and copy constructor to Table<T> Table<T>::insert methods Table<T>::clear Version struct + operator overloads Changed Rewrote implementation for Table<T> , no longer uses std::unordered_map Uses a vector for the item data, and a 256 uint8_t array that maps an id to an index in the vector. Allowing for faster lookups but a slight performance loss when removing items. Refactored pattern_demo.cpp and File.cpp to use new Table implementation table size is now a 2 byte field when saving/loading add setSpeed() overload to calculate speed from tempo/rpb settings. Song no longer calculates speed when tempo or rpb is set. Removed Table<T>::add , Table<T>::set , as these methods are no longer needed as the insert methods should be used instead. [0.0.1] - 2020-02-01 Added This CHANGELOG.md file to serve as a changelog for any new features, removals deprecations and so on for the project as a whole. Changed README.md, added a roadmap section to list planned features and the order in which they are worked on. ORGANIZATION.md, added a guideline to use unix style newlines in all files CMakeLists.txt, updated project version to v0.0.1","title":"Change log"},{"location":"about/changelog/#change-log","text":"","title":"Change log"},{"location":"about/changelog/#060-2022-03-03","text":"","title":"[0.6.0] - 2022-03-03"},{"location":"about/changelog/#added","text":"Command line argument parsing, you can now open a module on application startup General tab in Config dialog for changing basic settings. Appearance tab in Config dialog for changing fonts, colors and other settings Keyboard tab in Config dialog for changing keyboard layout and editing keybinds, as well as shortcut key sequences. Colors for the audio scope and graph editors are now customizable Autosave. Disabled by default, enable in the General tab in Config. Jxy effect for setting the global volume scale. Menu action in Tracker for reseting the global volume (Tracker|Reset global volume) Context menu for pattern editor Action for replacing all selected instrument columns with the current instrument (Edit|Replace instrument)","title":"Added"},{"location":"about/changelog/#changed","text":"Combined the Sound and Midi tabs in the Configuration dialog (Sound + MIDI) AZERTY keyboard layout uses French AZERTY QWERTZ keyboard layout uses German T3 CascadiaMono is no longer the default font (Windows) Consolas is now the default font, falling back to Courier New if not available No longer using dock widgets, Instruments + Waveforms are now located to the right of the pattern editor. Pattern editor row numbers can be displayed in decimal (default is hexadecimal) Cursor wrap can now be disabled in General settings Hxx effect (set sweep register) now works. Crash save filename no longer using colons in the timestamp (this resulted in using an illegal filename on windows). Follow-mode is now accessible from the Tracker menu Selecting an instrument/waveform will switch to that item in its editor if it is open. Module properties dialog can now be opened via Ctrl+P","title":"Changed"},{"location":"about/changelog/#fixed","text":"Issue with Instrument Editor not properly updating when changing instruments Hitting enter in the sequence editor line edit opens the Wave editor Bug when saving a new module overwrites the last opened one instead of prompting the user for a new location. Song editor not updating on song change.","title":"Fixed"},{"location":"about/changelog/#removed","text":"Synthesizer quality setting in Sound configuration","title":"Removed"},{"location":"about/changelog/#050-2021-09-10","text":"","title":"[0.5.0] - 2021-09-10"},{"location":"about/changelog/#added_1","text":"Instrument + Waveform list views for selecting/adding instruments/waveforms Effect columns can now be hidden/added for each track Multiple song support, modules can now store 1-256 songs Backwards compatibilty for 0.0 (Rev A) modules Tempo calculator dialog (Song > Tempo calculator...) Crash handler. Attempts to save a copy of the module after a fatal error Module properties dialog for editing the song list, module information and framerate/system. Song next/previous actions for changing the current song Song selector in Sidebar for selecting the current song Comments dialog for editing module comments File menu now shows a list of recently opened/saved modules","title":"Added"},{"location":"about/changelog/#changed_1","text":"Back to using miniaudio instead of RtAudio for audio playback Trackerboy is now SDI instead of MDI (only one module can be open at a time). Initial window size is set to a maximum of 1280x720 Module file format is now at 1.0 (Rev B) Config file is now more human friendly Redesigned header for the pattern editor Reduced spacing between columns in pattern editor Rewrote OrderEditor using a custom widget instead of QTableView + OrderModel Instrument and Waveform editors are now dialogs instead of docks. Octave decrease/increase shortcut changed from numpad / * to Ctrl+[ and Ctrl+]","title":"Changed"},{"location":"about/changelog/#fixed_1","text":"issue #2 - Exx not taking immediate effect (also fixes V0x and I0x not taking immediate effect as well) issue #3 - PulseAudio hang","title":"Fixed"},{"location":"about/changelog/#removed_1","text":"Module tree view (replaced by instrument and waveform docks) Instrument select toolbar (functionality replaced by selecting an instrument in the instruments dock) Patterns and Tempo spinboxes in Song settings editor","title":"Removed"},{"location":"about/changelog/#040-2021-07-07","text":"","title":"[0.4.0] - 2021-07-07"},{"location":"about/changelog/#added_2","text":"MIDI support. You can now use a MIDI input device to input notes / preview instruments Order editor has increment/decrement and set operations again Oscilloscope visualizer Icons for cut/copy/paste","title":"Added"},{"location":"about/changelog/#changed_2","text":"32-bit builds are now supported Using RtAudio instead of miniaudio for audio playback Some improvements to the audio diagnostics dialog Fxx effect changes the speed immediately now (previously it only took effect on the next row) Status bar is now updated with speed/tempo, time elapsed and position of current song being played. Cursor row is locked when playing in follow-mode Selecting an order while playing in follow-mode jumps to it","title":"Changed"},{"location":"about/changelog/#fixed_2","text":"Crash when creating new module on linux Copy/Paste bugs when copying effect columns","title":"Fixed"},{"location":"about/changelog/#031-2021-06-23","text":"","title":"[0.3.1] - 2021-06-23"},{"location":"about/changelog/#changed_3","text":"Play and stop shortcut only triggers when pattern editor has focus","title":"Changed"},{"location":"about/changelog/#fixed_3","text":"Note previews not working right on CH4 Current track not updating in order editor","title":"Fixed"},{"location":"about/changelog/#030-2021-06-22","text":"","title":"[0.3.0] - 2021-06-22"},{"location":"about/changelog/#added_3","text":"Note previews when inputting notes in the pattern editor Pattern repeat mode Step mode playback Input toolbar (set the octave and edit step) Instrument toolbar (combobox for the current instrument) Song menu, contains actions for adding/removing orders Sidebar widget, combines song settings + order editor Icon for configuration Keybinds for tracker actions (play, stop, etc) Add \"play and stop\" shortcut (pressing enter plays, pressing it again stops)","title":"Added"},{"location":"about/changelog/#changed_4","text":"No longer need to have record mode on when deleting, transposing, etc (record mode now only applies to setting notes, instruments and effects) Arpeggio editor graph is now centered at 0 Moved stuff from PatternEditor to separate toolbars Renamed Delete action in Edit menu to Erase View menu is now between Tracker and Window Fix \"set volume on trigger\" checkbox not updating when changing instruments Fix pattern previews not showing up on module load Fix order move up/down actions not disabling/enabling when user changes patterns Setting a note cut does not set the instrument column","title":"Changed"},{"location":"about/changelog/#removed_2","text":"PatternEditor toolbar (now is part of the main application toolbar) Order increment/decrement and set controls","title":"Removed"},{"location":"about/changelog/#020-2021-06-15","text":"The project has changed dramatically since the last release so changes will not be listed for this version. Here's a quick list of features: Open/save modules, can have multiple modules open at once Edit pattern data via keyboard (OpenMPT style keybindings, will be configurable in later versions) Transpose selection by note/octave or by a custom semitone offset (Ctrl+T) Reverse selected rows (Ctrl+R) Cut/Copy/Paste pattern data using system clipboard Mix paste (only the unset columns get set to the pasted data) Move pattern data via drag n drop Music playback, pattern cursor follows the current playing row Edit waveforms visually via a graph control, by selecting a preset or by manually entering waveram data Edit instrument sequences visually Instruments and Waveforms can be previewed using the piano control (or by keyboard). Undo/Redo functionality for song order and pattern editing. Audio diagnostics dialog (Help > Audio Diagnostics) for debugging sound output / buffer issues.","title":"[0.2.0] - 2021-06-15"},{"location":"about/changelog/#010-2020-09-20","text":"","title":"[0.1.0] - 2020-09-20"},{"location":"about/changelog/#added_4","text":"The main UI has been started Wave editor dialog, user can edit waveforms and preview them using a piano control Configuration dialog, user can select an audio device, set buffer size and volume Instrument editor dialog DeviceManager and DeviceTable classes in the audio library demo_device_manager demo lists all available host api and output devices","title":"Added"},{"location":"about/changelog/#changed_5","text":"PlaybackQueue can use any portaudio device instead of the default one Reorganized library header folders MusicRuntime only updates \"locked\" channels Rewrote Engine class to use MusicRuntime class","title":"Changed"},{"location":"about/changelog/#removed_3","text":"File class Old ui code (instedit)","title":"Removed"},{"location":"about/changelog/#006-2020-08-09","text":"","title":"[0.0.6] - 2020-08-09"},{"location":"about/changelog/#added_5","text":"song_demo, demonstrates playback of a Song Engine class, handles playback for Songs and sound effects FrequencyControl, frequency effect logic for channels 1, 2 and 3 Note lookup table for channel 4, NOTE_NOISE_TABLE MusicRuntime, handles song playback (replaces SongRuntime + PatternRutime + TrackRuntime) NoteControl, handles note triggers and cuts with an optional delay. PatternCursor, utility class for random access/iteration of a Pattern RuntimeContext struct, utility struct containing Synth and Table references Timer class, used for tempo/speed","title":"Added"},{"location":"about/changelog/#changed_6","text":"Fixed warnings for ubuntu build Mixer no longer uses sigma approximation when calculating the STEP_TABLE, this was done as an experiment and also worked as a low pass filter. Filtering will be done elsewhere in the future. added utility method Synth::setFrequency added several new effects. Effects are now categorized by pattern, track and frequency.","title":"Changed"},{"location":"about/changelog/#removed_4","text":"InstrumentRuntime, TrackRuntime, PatternRuntime and SongRuntime classes. These are being replaced with the newly added classes in the engine folder. Q53.hpp, replaced by Speed.hpp","title":"Removed"},{"location":"about/changelog/#005-2020-04-24","text":"","title":"[0.0.5] - 2020-04-24"},{"location":"about/changelog/#added_6","text":"PatternMaster class, container for all tracks in a Song Synth::reset() and for all APU components also","title":"Added"},{"location":"about/changelog/#changed_7","text":"Instruments are now a sequence of commands, 1 command per frame All runtime classes have been rewritten to use the new pattern format Song serialization has been rewritten to use new pattern format File format signature changed so that it starts with a non-printable character TrackRuntime and InstrumentRuntime are now template classes Patterns function like FamiTracker's, a pattern is a combination of resuable track data Pattern is now a tuple of Track references Order is now a POD struct of track ids, one for each channel Track no longer behaves like an iterator and now contains data pattern demo now plays a recreation of national park from pokemon G/S/C implemented writeAll method in PlaybackQueue PlaybackQueue uses standard library for sleeping instead of using Pa_Sleep Synth methods now have noexcept and const qualifiers where applicable Fix issue in Wav writer, where the sample count in the fact chunk was incorrect for multichannel data. The Mixer and Synth sampling rates can now be changed SongRuntime is now single-use, or, you can no longer set a new song","title":"Changed"},{"location":"about/changelog/#removed_5","text":"Instruction struct, no longer needed PatternRuntime::reset()","title":"Removed"},{"location":"about/changelog/#004-2020-04-01","text":"","title":"[0.0.4] - 2020-04-01"},{"location":"about/changelog/#added_7","text":"Wav class, for writing wav files (only supports 32-bit float format) Generator class, base class for PulseGen, WaveGen and NoiseGen PulseGen class, similar to the previously removed PulseChannel WaveGen class, similar to the previously removed WaveChannel Mixer class, adds bandlimited steps to left/right channels Sequencer class, similar to the previously removed one","title":"Added"},{"location":"about/changelog/#changed_8","text":"Minimum required C++ standard is now C++17 PlaybackQueue uses float samples instead of int16_t Synth was rewritten to use emulation based synthesis, generates samples on a per frame basis. Synth can now read and write APU registers reset() renamed to restart() in synth APU components setRegister renamed to writeRegister Sweep has its own shadow register and now longer uses the channel's on trigger (this behavior now matches the hardware) Sweep and Envelope register contents get applied on restart","title":"Changed"},{"location":"about/changelog/#removed_6","text":"include/trackerboy/synth/utils.hpp, no longer being used libtrackerboy/synth/test_Osc.cpp, was unused Osc, PulseOsc and WaveOsc, since we are now using emulation based synthesis","title":"Removed"},{"location":"about/changelog/#003-2020-03-09","text":"","title":"[0.0.3] - 2020-03-09"},{"location":"about/changelog/#added_8","text":"More test cases for File tests for Table<T> misc/genstep.py, similar to gensinc.py, generates bandlimited step sets for Osc implementation for WaveOsc NoiseGen, buffered version of NoiseChannel Envelope, moved code from EnvChannel here (will replace EnvChannel) Sweep class, replaces SweepPulseChannel HardwareFile struct (replaces ChannelFile)","title":"Added"},{"location":"about/changelog/#changed_9","text":"Fix exception being thrown when attempting to insert into table of size one less than maximum Rewrote Osc class. Subclasses must edit the delta buffer manually instead of using deltaSet . Osc no longer uses sinc sets. It uses bandlimited steps instead, similiar to blargg's http://www.slack.net/~ant/bl-synth/11.implementation.html. Osc::generate uses floats for samples instead of int16_t. Samples range from -1.0-1.0, exceeding both limits due to overshoot (so volume will need to be adjusted or clipping will occur). Mixer no longer emulates terminal volume/panning (tracker doesn't use it) Mixer works with sample buffers as opposed to individual samples from each channel Length counters are no longer emulated by the Synth Mixer and Sequencer were moved into Synth, as only the synth used these internally.","title":"Changed"},{"location":"about/changelog/#removed_7","text":"Osc::deltaSet as only WaveOsc needed this method Osc::setMute and Osc::muted , replaced by Osc::disable and Osc::disabled misc/gensinc.py no longer needed, replaced by genstep.py Channel, EnvChannel, PulseChannel, SweepPulseChannel, WaveChannel, NoiseChannel, ChannelFile, Mixer and Sequencer classes","title":"Removed"},{"location":"about/changelog/#002-2020-02-05","text":"","title":"[0.0.2] - 2020-02-05"},{"location":"about/changelog/#added_9","text":"File::loadTable<T> method uint16_t overload for correctEndian Destructor and copy constructor to Table<T> Table<T>::insert methods Table<T>::clear Version struct + operator overloads","title":"Added"},{"location":"about/changelog/#changed_10","text":"Rewrote implementation for Table<T> , no longer uses std::unordered_map Uses a vector for the item data, and a 256 uint8_t array that maps an id to an index in the vector. Allowing for faster lookups but a slight performance loss when removing items. Refactored pattern_demo.cpp and File.cpp to use new Table implementation table size is now a 2 byte field when saving/loading add setSpeed() overload to calculate speed from tempo/rpb settings. Song no longer calculates speed when tempo or rpb is set.","title":"Changed"},{"location":"about/changelog/#removed_8","text":"Table<T>::add , Table<T>::set , as these methods are no longer needed as the insert methods should be used instead.","title":"Removed"},{"location":"about/changelog/#001-2020-02-01","text":"","title":"[0.0.1] - 2020-02-01"},{"location":"about/changelog/#added_10","text":"This CHANGELOG.md file to serve as a changelog for any new features, removals deprecations and so on for the project as a whole.","title":"Added"},{"location":"about/changelog/#changed_11","text":"README.md, added a roadmap section to list planned features and the order in which they are worked on. ORGANIZATION.md, added a guideline to use unix style newlines in all files CMakeLists.txt, updated project version to v0.0.1","title":"Changed"},{"location":"about/license/","text":"License MIT License Copyright (c) 2019 stoneface Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"License"},{"location":"about/license/#license","text":"MIT License Copyright (c) 2019 stoneface Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"License"},{"location":"hardware/","text":"Hardware Primer This page is currently under construction.","title":"Overview"},{"location":"hardware/#hardware-primer","text":"This page is currently under construction.","title":"Hardware Primer"},{"location":"hardware/noise-channel/","text":"The noise channel This page is currently under construction.","title":"Noise channel"},{"location":"hardware/noise-channel/#the-noise-channel","text":"This page is currently under construction.","title":"The noise channel"},{"location":"hardware/pulse-channel/","text":"The pulse channels This page is currently under construction.","title":"Pulse channel"},{"location":"hardware/pulse-channel/#the-pulse-channels","text":"This page is currently under construction.","title":"The pulse channels"},{"location":"hardware/sweep/","text":"Frequency sweep This page is currently under construction.","title":"Frequency sweep"},{"location":"hardware/sweep/#frequency-sweep","text":"This page is currently under construction.","title":"Frequency sweep"},{"location":"hardware/volume-control/","text":"Volume control and panning This page is currently under construction.","title":"Volume control and panning"},{"location":"hardware/volume-control/#volume-control-and-panning","text":"This page is currently under construction.","title":"Volume control and panning"},{"location":"hardware/wave-channel/","text":"The wave channel This page is currently under construction.","title":"Wave channel"},{"location":"hardware/wave-channel/#the-wave-channel","text":"This page is currently under construction.","title":"The wave channel"},{"location":"interface/","text":"Interface The section describes every part of the Trackerboy interface. Main window Menus - File Edit Module Song Instrument Waveform Tracker View Help Toolbars Sidebar Pattern editor Instruments / Waveforms panel Status bar Editors Instrument editor Waveform editor Misc Comments Module properties Tempo calculator Shortcuts Configuration","title":"Overview"},{"location":"interface/#interface","text":"The section describes every part of the Trackerboy interface. Main window Menus - File Edit Module Song Instrument Waveform Tracker View Help Toolbars Sidebar Pattern editor Instruments / Waveforms panel Status bar Editors Instrument editor Waveform editor Misc Comments Module properties Tempo calculator Shortcuts Configuration","title":"Interface"},{"location":"interface/audio-diagnostics/","text":"Audio diagnostics The audio diagnostics dialog is a utility for displaying statistics about the audio from the current render being played out. It can be opened from the Audio diagnostics... action in the Help menu. Statistics Underruns - This is the total count of underruns 1 that have occurred. Ideally this statistic should be zero. If you get underruns try increasing the buffer size in the Sound / Midi config. Buffer Usage - This is the current utilization of the buffer, in samples. Status - \"Playing\" if sound is being played, \"Stopped\" otherwise Elapsed - Total time elapsed of the current render Refresh rate - Time since the last period , should be \u00b11ms of your period setting in the Sound / Midi config. Samples written - Number of samples written to the buffer during the last period . Clear You can clear the Underruns counter by clicking on the Clear button. Useful for testing if a new sound configuration has any underruns. Refresh By default, the dialog is automatically refreshed every 100 ms. You can change the refresh rate by editing the spinbox or you can disable the auto-refresh by checking off the Auto-refresh checkbox. If auto-refresh is disabled the statistics will only be updated when you click the Refresh button. The Refresh button can be clicked at any time to force update the statistics. 1 : An underrun occurs when the buffer does not contain enough samples that the audio device requests. Silence is filled in for these missing samples and what you hear is a gap in playback.","title":"Audio diagnostics"},{"location":"interface/audio-diagnostics/#audio-diagnostics","text":"The audio diagnostics dialog is a utility for displaying statistics about the audio from the current render being played out. It can be opened from the Audio diagnostics... action in the Help menu.","title":"Audio diagnostics"},{"location":"interface/audio-diagnostics/#statistics","text":"Underruns - This is the total count of underruns 1 that have occurred. Ideally this statistic should be zero. If you get underruns try increasing the buffer size in the Sound / Midi config. Buffer Usage - This is the current utilization of the buffer, in samples. Status - \"Playing\" if sound is being played, \"Stopped\" otherwise Elapsed - Total time elapsed of the current render Refresh rate - Time since the last period , should be \u00b11ms of your period setting in the Sound / Midi config. Samples written - Number of samples written to the buffer during the last period .","title":"Statistics"},{"location":"interface/audio-diagnostics/#clear","text":"You can clear the Underruns counter by clicking on the Clear button. Useful for testing if a new sound configuration has any underruns.","title":"Clear"},{"location":"interface/audio-diagnostics/#refresh","text":"By default, the dialog is automatically refreshed every 100 ms. You can change the refresh rate by editing the spinbox or you can disable the auto-refresh by checking off the Auto-refresh checkbox. If auto-refresh is disabled the statistics will only be updated when you click the Refresh button. The Refresh button can be clicked at any time to force update the statistics. 1 : An underrun occurs when the buffer does not contain enough samples that the audio device requests. Silence is filled in for these missing samples and what you hear is a gap in playback.","title":"Refresh"},{"location":"interface/comments/","text":"Comments The comments dialog is where you can edit the module's comments, or extra information about the module. The dialog can be accessed from the Module menu (Module > Comments...).","title":"Comments"},{"location":"interface/comments/#comments","text":"The comments dialog is where you can edit the module's comments, or extra information about the module. The dialog can be accessed from the Module menu (Module > Comments...).","title":"Comments"},{"location":"interface/history/","text":"History The history dialog shows the changes you have made to the current song. To revert any changes, you can select the item you want to revert to.","title":"History"},{"location":"interface/history/#history","text":"The history dialog shows the changes you have made to the current song. To revert any changes, you can select the item you want to revert to.","title":"History"},{"location":"interface/instrument-editor/","text":"The instrument editor This page is currently under construction.","title":"Instrument editor"},{"location":"interface/instrument-editor/#the-instrument-editor","text":"This page is currently under construction.","title":"The instrument editor"},{"location":"interface/instruments-waveforms/","text":"The instruments/waveforms panel This panel shows all of your instruments and waveforms contained in the current module. It is located to the right of the pattern editor . You can have up to 64 instruments and 64 waveforms in each module. Each item can be referenced by its 6-bit ID. For instruments this ID is used in the instrument column in the pattern editor. For waveforms this ID is used as a parameter for the Exx effect. When an item is selected the instrument/waveform editor will switch to that item. You can also double-click an item to open the editor. When an instrument is selected, the pattern editor will automatically insert its ID into the instrument column when entering notes. To prevent this from happening, deselect the instrument by clicking on it while holding the CTRL key. Toolbar The toolbar contains actions for adding/removing instruments or waveforms. Note that all actions in this toolbar permanently modify the module and CANNOT be undone. Add Adds an instrument/waveform to the module. The item uses the lowest available ID. Remove Removes the selected item from the module. Duplicate Makes a copy of the selected item. Like Add , the copied item uses the lowest available ID. Import This feature is currently not available. Export This feature is currently not available. Edit Opens the editor for the selected item.","title":"Instruments/Waveforms panel"},{"location":"interface/instruments-waveforms/#the-instrumentswaveforms-panel","text":"This panel shows all of your instruments and waveforms contained in the current module. It is located to the right of the pattern editor . You can have up to 64 instruments and 64 waveforms in each module. Each item can be referenced by its 6-bit ID. For instruments this ID is used in the instrument column in the pattern editor. For waveforms this ID is used as a parameter for the Exx effect. When an item is selected the instrument/waveform editor will switch to that item. You can also double-click an item to open the editor. When an instrument is selected, the pattern editor will automatically insert its ID into the instrument column when entering notes. To prevent this from happening, deselect the instrument by clicking on it while holding the CTRL key.","title":"The instruments/waveforms panel"},{"location":"interface/instruments-waveforms/#toolbar","text":"The toolbar contains actions for adding/removing instruments or waveforms. Note that all actions in this toolbar permanently modify the module and CANNOT be undone.","title":"Toolbar"},{"location":"interface/instruments-waveforms/#add","text":"Adds an instrument/waveform to the module. The item uses the lowest available ID.","title":"Add"},{"location":"interface/instruments-waveforms/#remove","text":"Removes the selected item from the module.","title":"Remove"},{"location":"interface/instruments-waveforms/#duplicate","text":"Makes a copy of the selected item. Like Add , the copied item uses the lowest available ID.","title":"Duplicate"},{"location":"interface/instruments-waveforms/#import","text":"This feature is currently not available.","title":"Import"},{"location":"interface/instruments-waveforms/#export","text":"This feature is currently not available.","title":"Export"},{"location":"interface/instruments-waveforms/#edit","text":"Opens the editor for the selected item.","title":"Edit"},{"location":"interface/module-properties/","text":"Module properties This page is currently under construction.","title":"Module properties"},{"location":"interface/module-properties/#module-properties","text":"This page is currently under construction.","title":"Module properties"},{"location":"interface/pattern-editor/","text":"The pattern editor The pattern editor is where you write your song, and is the heart of the application. The editor shows the current pattern, which can be selected from the order editor . The first column on the left are row numbers. Track data for each channel then follows. Record mode must be enabled to modify pattern data via the keyboard. To toggle record mode, hit the Spacebar or click the Record action in the Tracker menu. When record mode is enabled, the cursor line will be red instead of blue. Track layout For any unset column, dashes are displayed. All numberical data in the editor uses hexadecimal notation. Note - Displays the note if one was set. The format of the note shown has the letter in the first cell, octave in the last, and separated by a dash for natural notes or a # or b for accidentals. By default sharp accidentals, # , are displayed ( C#4 instead of Db4 ). Notes can be entered using your keyboard, or a MIDI input device (requires configuration in the Sound / Midi config). See the Keyboard configuration for more details on the default key bindings. Instrument - Displays the instrument id if one was set. You do not need a note set when setting this column! This way you can change instruments mid-note. You can set this column using your keyboard or by entering a note with an instrument selected. Effects - Displays each effect and parameter. You can have 1-3 effect columns displayed for each track. Effects are composed of three characters. The first designates the type of effect and the last two are hex nibbles that make up the effect's parameter. See the effect list for all available effects to use. Any unknown effect will be displayed with ? as the effect type (module was made with a newer version of Trackerboy or is corrupted). You can unset any column by putting the cursor over it and hitting Del . When erasing the note column the instrument column will be erased as well. You can avoid this by just selecting the note you want to erase instead. Controls Ctrl+A - Selects all of the current track (first time) or selects the entire pattern (second time). Ctrl+X , Ctrl+C , Ctrl+V - cut, copy, paste Up , Left , Down , Right - move the cursor, hold Shift to select Tab - move cursor to next track, Shift+Tab moves it to the previous track. PgUp , PgDn - move cursor up/down by the page step Backspace - deletes the previous row, shifting all rows ahead up 1. Del - erases selection / cursor column Mouse You can also use the mouse to move the cursor by clicking on the position you want. You can drag the mouse to select an area. Drag this area again to move it to a new location. Selecting rows Clicking in the row number column selects whole rows. Hold down the mouse to select multiple rows. See shortcuts for more available shortcuts. Header The header allows you to hide/show effect columns for each channel and mute/unmute channels. Adding/hiding effects To add more effect columns, click the plus in the header for the track you want. Each track can have up to 3 effect columns. To hide the columns, click the minus instead. You can hide up to 2 columns for every track. Keep in mind that effects not shown still get performed by the tracker . Muting To mute a channel click its section in the header. To unmute it, click it again. The activity bar in the header will be green for unmuted and red for muted. Solo To solo a channel double-click its section in the header. Double-click it again to un-solo. Context menu The header also has a context menu for muting/unmuting and soloing channels. To use right-click when the mouse is under the channel's section in the header.","title":"Pattern editor"},{"location":"interface/pattern-editor/#the-pattern-editor","text":"The pattern editor is where you write your song, and is the heart of the application. The editor shows the current pattern, which can be selected from the order editor . The first column on the left are row numbers. Track data for each channel then follows. Record mode must be enabled to modify pattern data via the keyboard. To toggle record mode, hit the Spacebar or click the Record action in the Tracker menu. When record mode is enabled, the cursor line will be red instead of blue.","title":"The pattern editor"},{"location":"interface/pattern-editor/#track-layout","text":"For any unset column, dashes are displayed. All numberical data in the editor uses hexadecimal notation. Note - Displays the note if one was set. The format of the note shown has the letter in the first cell, octave in the last, and separated by a dash for natural notes or a # or b for accidentals. By default sharp accidentals, # , are displayed ( C#4 instead of Db4 ). Notes can be entered using your keyboard, or a MIDI input device (requires configuration in the Sound / Midi config). See the Keyboard configuration for more details on the default key bindings. Instrument - Displays the instrument id if one was set. You do not need a note set when setting this column! This way you can change instruments mid-note. You can set this column using your keyboard or by entering a note with an instrument selected. Effects - Displays each effect and parameter. You can have 1-3 effect columns displayed for each track. Effects are composed of three characters. The first designates the type of effect and the last two are hex nibbles that make up the effect's parameter. See the effect list for all available effects to use. Any unknown effect will be displayed with ? as the effect type (module was made with a newer version of Trackerboy or is corrupted). You can unset any column by putting the cursor over it and hitting Del . When erasing the note column the instrument column will be erased as well. You can avoid this by just selecting the note you want to erase instead.","title":"Track layout"},{"location":"interface/pattern-editor/#controls","text":"Ctrl+A - Selects all of the current track (first time) or selects the entire pattern (second time). Ctrl+X , Ctrl+C , Ctrl+V - cut, copy, paste Up , Left , Down , Right - move the cursor, hold Shift to select Tab - move cursor to next track, Shift+Tab moves it to the previous track. PgUp , PgDn - move cursor up/down by the page step Backspace - deletes the previous row, shifting all rows ahead up 1. Del - erases selection / cursor column","title":"Controls"},{"location":"interface/pattern-editor/#mouse","text":"You can also use the mouse to move the cursor by clicking on the position you want. You can drag the mouse to select an area. Drag this area again to move it to a new location.","title":"Mouse"},{"location":"interface/pattern-editor/#selecting-rows","text":"Clicking in the row number column selects whole rows. Hold down the mouse to select multiple rows. See shortcuts for more available shortcuts.","title":"Selecting rows"},{"location":"interface/pattern-editor/#header","text":"The header allows you to hide/show effect columns for each channel and mute/unmute channels.","title":"Header"},{"location":"interface/pattern-editor/#addinghiding-effects","text":"To add more effect columns, click the plus in the header for the track you want. Each track can have up to 3 effect columns. To hide the columns, click the minus instead. You can hide up to 2 columns for every track. Keep in mind that effects not shown still get performed by the tracker .","title":"Adding/hiding effects"},{"location":"interface/pattern-editor/#muting","text":"To mute a channel click its section in the header. To unmute it, click it again. The activity bar in the header will be green for unmuted and red for muted.","title":"Muting"},{"location":"interface/pattern-editor/#solo","text":"To solo a channel double-click its section in the header. Double-click it again to un-solo.","title":"Solo"},{"location":"interface/pattern-editor/#context-menu","text":"The header also has a context menu for muting/unmuting and soloing channels. To use right-click when the mouse is under the channel's section in the header.","title":"Context menu"},{"location":"interface/shortcuts/","text":"Shortcuts This page is currently under construction.","title":"Shortcuts"},{"location":"interface/shortcuts/#shortcuts","text":"This page is currently under construction.","title":"Shortcuts"},{"location":"interface/sidebar/","text":"The Sidebar The sidebar is located to the left of the Pattern editor and contains controls for the current song. Visualizer The visualizer is an oscilloscope for the left and right channels. The top scope is the left channel and the bottom is the right. You can change the colors in the Appearance config. Song selector Use this combo box to change the current song to edit/play. New songs can be added from the Module properties dialog. Song editor This section has controls for changing the song's settings. Rows/beat - This setting determines the number of rows that make up a beat. It used for tempo calculation and for highlighting rows in the pattern editor. The default value for new songs is 4 . Rows/measure - This setting determines how many rows make up a measure. This setting should be a multiple of the Rows/beat setting but this is not required. This setting is only used for highlighting rows in the pattern editor. The default value is 16 . Rows - This is the number of rows each track contains. Click the button to change the setting. Note that setting a smaller size will truncate all tracks in the song and cannot be undone. The default setting is 64 rows. Speed - Initial speed setting when playing the song. Note that the value is in hexadecimal. See Speed for more details. The default speed setting is 0x60 . Order editor The order editor is where you edit the song's order. The song order is a list of orders, which is a set of track IDs (one for each channel). You can reuse existing tracks across orders. Each song can have a maximum of 256 orders, and must have at least 1 order. To edit the order, move the cursor via the mouse or keyboard and edit the track ID via the keyboard. Track IDs are in hexadecimal notation and can range from 0x00 to 0xFF. Toolbar The order editor has a vertical toolbar to the left of the order grid. It contains actions for editing the song's order. Some of these actions are the same as the Song menu's, also provided here for convenience. The editor adds a few more actions not present in that menu. Increment selected Increments the track ID at the cursor position by 1. If Change all mode is enabled, then all track IDs for the current row will be incremented by 1. Decrement selected Decrements the track ID at the cursor position by 1. If Change all mode is enabled, then all track IDs for the current row will be decremented by 1. Change all Toggles Change all mode. If this mode is enabled, then all track IDs in the order will be edited via the keyboard or increment/decrement actions.","title":"Sidebar"},{"location":"interface/sidebar/#the-sidebar","text":"The sidebar is located to the left of the Pattern editor and contains controls for the current song.","title":"The Sidebar"},{"location":"interface/sidebar/#visualizer","text":"The visualizer is an oscilloscope for the left and right channels. The top scope is the left channel and the bottom is the right. You can change the colors in the Appearance config.","title":"Visualizer"},{"location":"interface/sidebar/#song-selector","text":"Use this combo box to change the current song to edit/play. New songs can be added from the Module properties dialog.","title":"Song selector"},{"location":"interface/sidebar/#song-editor","text":"This section has controls for changing the song's settings. Rows/beat - This setting determines the number of rows that make up a beat. It used for tempo calculation and for highlighting rows in the pattern editor. The default value for new songs is 4 . Rows/measure - This setting determines how many rows make up a measure. This setting should be a multiple of the Rows/beat setting but this is not required. This setting is only used for highlighting rows in the pattern editor. The default value is 16 . Rows - This is the number of rows each track contains. Click the button to change the setting. Note that setting a smaller size will truncate all tracks in the song and cannot be undone. The default setting is 64 rows. Speed - Initial speed setting when playing the song. Note that the value is in hexadecimal. See Speed for more details. The default speed setting is 0x60 .","title":"Song editor"},{"location":"interface/sidebar/#order-editor","text":"The order editor is where you edit the song's order. The song order is a list of orders, which is a set of track IDs (one for each channel). You can reuse existing tracks across orders. Each song can have a maximum of 256 orders, and must have at least 1 order. To edit the order, move the cursor via the mouse or keyboard and edit the track ID via the keyboard. Track IDs are in hexadecimal notation and can range from 0x00 to 0xFF.","title":"Order editor"},{"location":"interface/sidebar/#toolbar","text":"The order editor has a vertical toolbar to the left of the order grid. It contains actions for editing the song's order. Some of these actions are the same as the Song menu's, also provided here for convenience. The editor adds a few more actions not present in that menu.","title":"Toolbar"},{"location":"interface/sidebar/#increment-selected","text":"Increments the track ID at the cursor position by 1. If Change all mode is enabled, then all track IDs for the current row will be incremented by 1.","title":"Increment selected"},{"location":"interface/sidebar/#decrement-selected","text":"Decrements the track ID at the cursor position by 1. If Change all mode is enabled, then all track IDs for the current row will be decremented by 1.","title":"Decrement selected"},{"location":"interface/sidebar/#change-all","text":"Toggles Change all mode. If this mode is enabled, then all track IDs in the order will be edited via the keyboard or increment/decrement actions.","title":"Change all"},{"location":"interface/statusbar/","text":"Status bar Status message / tip. Output status. Playing - device is playing sound. Ready - device is ready to play. Device error - An error has ocurred with the device and cannot be used. Reconfigure the device in the Sound / Midi config. Current speed, in frames per row (FPR). Current tempo, in beats per minute (BPM). Elapsed time of music playback, in minutes:seconds. Position in song, first number is the order and the second is the row. Output sample rate, in Hertz (Hz).","title":"Status bar"},{"location":"interface/statusbar/#status-bar","text":"Status message / tip. Output status. Playing - device is playing sound. Ready - device is ready to play. Device error - An error has ocurred with the device and cannot be used. Reconfigure the device in the Sound / Midi config. Current speed, in frames per row (FPR). Current tempo, in beats per minute (BPM). Elapsed time of music playback, in minutes:seconds. Position in song, first number is the order and the second is the row. Output sample rate, in Hertz (Hz).","title":"Status bar"},{"location":"interface/tempo-calculator/","text":"Tempo Calculator The tempo calculator is a utility dialog for calculating speed values from a given tempo. You can access it from the Tempo Calculator... action in the Song menu. You can change either the tempo or speed spinbox to your desired setting and the opposite will be automatically updated. When you are satisfied with the calculated speed you can click the Set song speed button to set it to the current song's speed setting.","title":"Tempo Calculator"},{"location":"interface/tempo-calculator/#tempo-calculator","text":"The tempo calculator is a utility dialog for calculating speed values from a given tempo. You can access it from the Tempo Calculator... action in the Song menu. You can change either the tempo or speed spinbox to your desired setting and the opposite will be automatically updated. When you are satisfied with the calculated speed you can click the Set song speed button to set it to the current song's speed setting.","title":"Tempo Calculator"},{"location":"interface/toolbars/","text":"Toolbars This page explains all toolbars used in the application. Each toolbar can be docked on either side of the main window, or can be left floating anywhere on screen. By default all toolbars are position at the top of the window. Visibility of each toolbar can be toggled by clicking its corresponding menu action in the View > Toolbars menu. You can also reset the layout of all toolbars by clicking the View > Reset layout menu action. File toolbar Contains actions from the File menu. New | Open | Save | Configuration Edit toolbar Contains actions from the Edit menu. Undo | Redo | Cut | Copy | Paste Song toolbar Contains actions from the Song menu. Insert order row | Remove order row | Duplicate order row | Move order up | Move order down Tracker toolbar Contains actions from the Tracker and Module menus. Play | Play from start | Play at cursor | Step row | Stop | Pattern repeat | Record | Previous song | Next song | Follow mode Input toolbar Octave - Base octave used when entering notes. Default is 5 . Edit step - Amount of rows the editor steps down to when entering data. Default is 1 . Key repetition - If enabled keys will be repeated when held down. Key repetition is enabled by default.","title":"Toolbars"},{"location":"interface/toolbars/#toolbars","text":"This page explains all toolbars used in the application. Each toolbar can be docked on either side of the main window, or can be left floating anywhere on screen. By default all toolbars are position at the top of the window. Visibility of each toolbar can be toggled by clicking its corresponding menu action in the View > Toolbars menu. You can also reset the layout of all toolbars by clicking the View > Reset layout menu action.","title":"Toolbars"},{"location":"interface/toolbars/#file-toolbar","text":"Contains actions from the File menu. New | Open | Save | Configuration","title":"File toolbar"},{"location":"interface/toolbars/#edit-toolbar","text":"Contains actions from the Edit menu. Undo | Redo | Cut | Copy | Paste","title":"Edit toolbar"},{"location":"interface/toolbars/#song-toolbar","text":"Contains actions from the Song menu. Insert order row | Remove order row | Duplicate order row | Move order up | Move order down","title":"Song toolbar"},{"location":"interface/toolbars/#tracker-toolbar","text":"Contains actions from the Tracker and Module menus. Play | Play from start | Play at cursor | Step row | Stop | Pattern repeat | Record | Previous song | Next song | Follow mode","title":"Tracker toolbar"},{"location":"interface/toolbars/#input-toolbar","text":"Octave - Base octave used when entering notes. Default is 5 . Edit step - Amount of rows the editor steps down to when entering data. Default is 1 . Key repetition - If enabled keys will be repeated when held down. Key repetition is enabled by default.","title":"Input toolbar"},{"location":"interface/wav-exporter/","text":"WAV Exporter","title":"WAV export"},{"location":"interface/wav-exporter/#wav-exporter","text":"","title":"WAV Exporter"},{"location":"interface/waveform-editor/","text":"The waveform editor This page is currently under construction.","title":"Waveform editor"},{"location":"interface/waveform-editor/#the-waveform-editor","text":"This page is currently under construction.","title":"The waveform editor"},{"location":"interface/configuration/","text":"Configuration Application settings can be changed using the configuration dialog, which can be opened from the File menu. Categories The configuration is organized into the following categories: General Appearance Keyboard Sound / Midi File location The configuration is stored in an INI file, and its location depends on your operating system. Operating system Path Windows %APPDATA%\\Trackerboy\\Trackerboy.ini Linux $HOME/.config/Trackerboy/Trackerboy.ini MacOS $HOME/.config/Trackerboy/Trackerboy.ini You should not need to edit this file manually, and are discouraged from doing so as the format may change in later versions. You can delete this file if you would like to reset the configuration, or save a copy for backup purposes.","title":"Overview"},{"location":"interface/configuration/#configuration","text":"Application settings can be changed using the configuration dialog, which can be opened from the File menu.","title":"Configuration"},{"location":"interface/configuration/#categories","text":"The configuration is organized into the following categories: General Appearance Keyboard Sound / Midi","title":"Categories"},{"location":"interface/configuration/#file-location","text":"The configuration is stored in an INI file, and its location depends on your operating system. Operating system Path Windows %APPDATA%\\Trackerboy\\Trackerboy.ini Linux $HOME/.config/Trackerboy/Trackerboy.ini MacOS $HOME/.config/Trackerboy/Trackerboy.ini You should not need to edit this file manually, and are discouraged from doing so as the format may change in later versions. You can delete this file if you would like to reset the configuration, or save a copy for backup purposes.","title":"File location"},{"location":"interface/configuration/appearance/","text":"Appearance configuration This page is currently under construction.","title":"Appearance"},{"location":"interface/configuration/appearance/#appearance-configuration","text":"This page is currently under construction.","title":"Appearance configuration"},{"location":"interface/configuration/general/","text":"General configuration General application settings Options Default Option Description \u2715 Backup module on save If enabled a copy of the current module will be made with a bak extension when saving. \u2714 Wrap cursor Cursor wraps when it has reached the beginning or end of the pattern. \u2714 Wrap cursor across patterns Cursor in the order editor wraps when it reaches the beginning or end of the song order. \u2714 Show row numbers in hexadecimal Row numbers in the pattern editor will use hexadecimal notation instead of decimal. \u2715 Show flat accidentals Flat accidentals will be shown instead of sharps. \u2714 Show pattern previews The previous and next patterns in the order will be displayed in the pattern editor. Auto-save Check to enable the auto-save feature. When auto-save is enabled, Trackerboy will automatically save your module at every specified interval. The default interval is 30 seconds , but you can change this to your preferred setting. Auto-save is disabled by default. Page step The page step amount. This setting is used when scrolling the pattern editor via the mouse wheel. The default page step is 4 rows .","title":"General"},{"location":"interface/configuration/general/#general-configuration","text":"General application settings","title":"General configuration"},{"location":"interface/configuration/general/#options","text":"Default Option Description \u2715 Backup module on save If enabled a copy of the current module will be made with a bak extension when saving. \u2714 Wrap cursor Cursor wraps when it has reached the beginning or end of the pattern. \u2714 Wrap cursor across patterns Cursor in the order editor wraps when it reaches the beginning or end of the song order. \u2714 Show row numbers in hexadecimal Row numbers in the pattern editor will use hexadecimal notation instead of decimal. \u2715 Show flat accidentals Flat accidentals will be shown instead of sharps. \u2714 Show pattern previews The previous and next patterns in the order will be displayed in the pattern editor.","title":"Options"},{"location":"interface/configuration/general/#auto-save","text":"Check to enable the auto-save feature. When auto-save is enabled, Trackerboy will automatically save your module at every specified interval. The default interval is 30 seconds , but you can change this to your preferred setting. Auto-save is disabled by default.","title":"Auto-save"},{"location":"interface/configuration/general/#page-step","text":"The page step amount. This setting is used when scrolling the pattern editor via the mouse wheel. The default page step is 4 rows .","title":"Page step"},{"location":"interface/configuration/keyboard/","text":"Keyboard configuration This page is currently under construction.","title":"Keyboard"},{"location":"interface/configuration/keyboard/#keyboard-configuration","text":"This page is currently under construction.","title":"Keyboard configuration"},{"location":"interface/configuration/sound/","text":"Sound and MIDI configuration Here you can configure your output device and (optionally) MIDI input device. Output device Select the output device and API for sound output. The available APIs to choose from depends on your operating system. When changing the API the device combo will be repopulated with all available devices in that API. You can also refresh the device combo by clicking the Rescan button. If the API cannot be used, the message \"API Unavailable\" will be shown under the device combo box. Default device Every API has a \"Default device\" option in the device list. This option will use the API's definition of a default device. For some APIs, this allows for automatic stream routing (ie switching the default device during playback). Null API The Null API is available for every platform. This API contains one device, the null device, which outputs sound nowhere. You can use this device if you don't want sound to play out. Output settings Buffer size - sets the size, in milliseconds, of the playback buffer. This setting determines the overall latency of the output. 40 ms is the default setting. It is recommended that you increase this setting if you get any underruns. Period - this is the rate audio is generated and queued in the buffer. It also determines how often the UI is updated. It is recommended that the period is less than or equal to half the buffer size. Lower values requires more CPU use, so increase this if lower utilization is perferred. The default period is 5 ms. Samplerate - the sample rate, in Hz, of the generated output. Output will be resampled using a linear resampler if the configured device does not support the sample rate. See here for more details on the resampler. Since Trackerboy uses bandlimited synthesis, higher samplerates do not improve audio quality. So it is recommended you select the same samplerate the device uses. Notes on latency Latency depends mainly on two things: the buffer size and the latency provided by the backend. Trackerboy will try to use the lowest latency possible for the configured device, which on WASAPI is usually 10 ms. You may need to configure your audio provider if a lower latency is desired, but for most cases the default is acceptable. MIDI input Click the checkbox if you would like to enable MIDI input handling for note input. Similarly to the output device , select a backend and device to use. If you need to update the device combo click the Rescan button.","title":"Sound / Midi"},{"location":"interface/configuration/sound/#sound-and-midi-configuration","text":"Here you can configure your output device and (optionally) MIDI input device.","title":"Sound and MIDI configuration"},{"location":"interface/configuration/sound/#output-device","text":"Select the output device and API for sound output. The available APIs to choose from depends on your operating system. When changing the API the device combo will be repopulated with all available devices in that API. You can also refresh the device combo by clicking the Rescan button. If the API cannot be used, the message \"API Unavailable\" will be shown under the device combo box.","title":"Output device"},{"location":"interface/configuration/sound/#default-device","text":"Every API has a \"Default device\" option in the device list. This option will use the API's definition of a default device. For some APIs, this allows for automatic stream routing (ie switching the default device during playback).","title":"Default device"},{"location":"interface/configuration/sound/#null-api","text":"The Null API is available for every platform. This API contains one device, the null device, which outputs sound nowhere. You can use this device if you don't want sound to play out.","title":"Null API"},{"location":"interface/configuration/sound/#output-settings","text":"Buffer size - sets the size, in milliseconds, of the playback buffer. This setting determines the overall latency of the output. 40 ms is the default setting. It is recommended that you increase this setting if you get any underruns. Period - this is the rate audio is generated and queued in the buffer. It also determines how often the UI is updated. It is recommended that the period is less than or equal to half the buffer size. Lower values requires more CPU use, so increase this if lower utilization is perferred. The default period is 5 ms. Samplerate - the sample rate, in Hz, of the generated output. Output will be resampled using a linear resampler if the configured device does not support the sample rate. See here for more details on the resampler. Since Trackerboy uses bandlimited synthesis, higher samplerates do not improve audio quality. So it is recommended you select the same samplerate the device uses.","title":"Output settings"},{"location":"interface/configuration/sound/#notes-on-latency","text":"Latency depends mainly on two things: the buffer size and the latency provided by the backend. Trackerboy will try to use the lowest latency possible for the configured device, which on WASAPI is usually 10 ms. You may need to configure your audio provider if a lower latency is desired, but for most cases the default is acceptable.","title":"Notes on latency"},{"location":"interface/configuration/sound/#midi-input","text":"Click the checkbox if you would like to enable MIDI input handling for note input. Similarly to the output device , select a backend and device to use. If you need to update the device combo click the Rescan button.","title":"MIDI input"},{"location":"interface/menus/edit/","text":"Edit Undo Undos the last change to the current song. Redo Redos the last undone change. Cut Copies the current selection to the clipboard and then erases it. If there is no selection, the cursor contents are used instead. Copy Copies the current selection or cursor to the clipboard. Paste Pastes the clipboard contents to the pattern at the cursor. This type of paste overwrites the contents at the cursor with clipboard data. Paste Mix Same as Paste , but mixes the clipboard data with the contents at the cursor. When mixing data, only empty columns get overwritten. Example Only rows 00 and 02 were copied since they were empty in the destination region. Erase Erases selection contents. If there is no selection, the cursor contents are erased. Select All Alternates between selecting the current track and the whole pattern. Transpose Transposes the selected notes or cursor by a certain amount. Decrease note Transposes the note down by 1 semitone. Increase note Transposes the note up by 1 semitone. Decrease octave Transposes the note down by 1 octave. Increase octave Transposes the note up by 1 octave. Custom Transposes the note by a specified number of semitones. Reverse Reverses by row the selected region. Does nothing if there is no selection. Replace instrument Replaces all selected instrument columns with the selected instrument. If no instrument is selected this action does nothing. Key repetition Toggles key repeat. When checked, holding down a key repeats it.","title":"Edit"},{"location":"interface/menus/edit/#edit","text":"","title":"Edit"},{"location":"interface/menus/edit/#undo","text":"Undos the last change to the current song.","title":"Undo"},{"location":"interface/menus/edit/#redo","text":"Redos the last undone change.","title":"Redo"},{"location":"interface/menus/edit/#cut","text":"Copies the current selection to the clipboard and then erases it. If there is no selection, the cursor contents are used instead.","title":"Cut"},{"location":"interface/menus/edit/#copy","text":"Copies the current selection or cursor to the clipboard.","title":"Copy"},{"location":"interface/menus/edit/#paste","text":"Pastes the clipboard contents to the pattern at the cursor. This type of paste overwrites the contents at the cursor with clipboard data.","title":"Paste"},{"location":"interface/menus/edit/#paste-mix","text":"Same as Paste , but mixes the clipboard data with the contents at the cursor. When mixing data, only empty columns get overwritten.","title":"Paste Mix"},{"location":"interface/menus/edit/#example","text":"Only rows 00 and 02 were copied since they were empty in the destination region.","title":"Example"},{"location":"interface/menus/edit/#erase","text":"Erases selection contents. If there is no selection, the cursor contents are erased.","title":"Erase"},{"location":"interface/menus/edit/#select-all","text":"Alternates between selecting the current track and the whole pattern.","title":"Select All"},{"location":"interface/menus/edit/#transpose","text":"Transposes the selected notes or cursor by a certain amount.","title":"Transpose"},{"location":"interface/menus/edit/#decrease-note","text":"Transposes the note down by 1 semitone.","title":"Decrease note"},{"location":"interface/menus/edit/#increase-note","text":"Transposes the note up by 1 semitone.","title":"Increase note"},{"location":"interface/menus/edit/#decrease-octave","text":"Transposes the note down by 1 octave.","title":"Decrease octave"},{"location":"interface/menus/edit/#increase-octave","text":"Transposes the note up by 1 octave.","title":"Increase octave"},{"location":"interface/menus/edit/#custom","text":"Transposes the note by a specified number of semitones.","title":"Custom"},{"location":"interface/menus/edit/#reverse","text":"Reverses by row the selected region. Does nothing if there is no selection.","title":"Reverse"},{"location":"interface/menus/edit/#replace-instrument","text":"Replaces all selected instrument columns with the selected instrument. If no instrument is selected this action does nothing.","title":"Replace instrument"},{"location":"interface/menus/edit/#key-repetition","text":"Toggles key repeat. When checked, holding down a key repeats it.","title":"Key repetition"},{"location":"interface/menus/file/","text":"File New Creates a new module. If the current module has any unsaved changes you will be prompted to save or discard them. Open Opens an existing module. If you have unsaved changes you will be prompted to save or discard them. Only Trackerboy modules (*.tbm) can be opened. Save Saves the current module. If the module has not been saved yet you will be prompted for a location to save. Save As... Prompts for a location to save the current module to. Export to WAV... Opens the WAV Exporter dialog. Allows you to export the current song to a WAV file. Recent files Up to 9 of your recently opened files will be displayed here. Configuration... Opens the configuration dialog where you can edit application settings. Quit Exits the application.","title":"File"},{"location":"interface/menus/file/#file","text":"","title":"File"},{"location":"interface/menus/file/#new","text":"Creates a new module. If the current module has any unsaved changes you will be prompted to save or discard them.","title":"New"},{"location":"interface/menus/file/#open","text":"Opens an existing module. If you have unsaved changes you will be prompted to save or discard them. Only Trackerboy modules (*.tbm) can be opened.","title":"Open"},{"location":"interface/menus/file/#save","text":"Saves the current module. If the module has not been saved yet you will be prompted for a location to save.","title":"Save"},{"location":"interface/menus/file/#save-as","text":"Prompts for a location to save the current module to.","title":"Save As..."},{"location":"interface/menus/file/#export-to-wav","text":"Opens the WAV Exporter dialog. Allows you to export the current song to a WAV file.","title":"Export to WAV..."},{"location":"interface/menus/file/#recent-files","text":"Up to 9 of your recently opened files will be displayed here.","title":"Recent files"},{"location":"interface/menus/file/#configuration","text":"Opens the configuration dialog where you can edit application settings.","title":"Configuration..."},{"location":"interface/menus/file/#quit","text":"Exits the application.","title":"Quit"},{"location":"interface/menus/help/","text":"Help Audio diagnostics... Shows the Audio diagnostics dialog. The audio diagnostics dialog displays useful statistics about the audio output. About Shows version information about this program. About Qt Shows version information about Qt.","title":"Help"},{"location":"interface/menus/help/#help","text":"","title":"Help"},{"location":"interface/menus/help/#audio-diagnostics","text":"Shows the Audio diagnostics dialog. The audio diagnostics dialog displays useful statistics about the audio output.","title":"Audio diagnostics..."},{"location":"interface/menus/help/#about","text":"Shows version information about this program.","title":"About"},{"location":"interface/menus/help/#about-qt","text":"Shows version information about Qt.","title":"About Qt"},{"location":"interface/menus/instruments/","text":"Instruments Warning: All of these menu actions cannot be undone Add Adds a new instrument to the instrument table. The new instrument takes the id of the lowest available one. Remove Removes the selected instrument from the table. Duplicate Duplicates the selected instrument. Import Imports an instrument from a trackerboy instrument file (*.tbi). Note: This action is disabled because this feature is not available yet. Export Exports the selected instrument to a trackerboy instrument file (*.tbi). Note: This action is disabled because this feature is not available yet. Edit Opens the Instrument editor for the selected instrument.","title":"Instruments"},{"location":"interface/menus/instruments/#instruments","text":"Warning: All of these menu actions cannot be undone","title":"Instruments"},{"location":"interface/menus/instruments/#add","text":"Adds a new instrument to the instrument table. The new instrument takes the id of the lowest available one.","title":"Add"},{"location":"interface/menus/instruments/#remove","text":"Removes the selected instrument from the table.","title":"Remove"},{"location":"interface/menus/instruments/#duplicate","text":"Duplicates the selected instrument.","title":"Duplicate"},{"location":"interface/menus/instruments/#import","text":"Imports an instrument from a trackerboy instrument file (*.tbi). Note: This action is disabled because this feature is not available yet.","title":"Import"},{"location":"interface/menus/instruments/#export","text":"Exports the selected instrument to a trackerboy instrument file (*.tbi). Note: This action is disabled because this feature is not available yet.","title":"Export"},{"location":"interface/menus/instruments/#edit","text":"Opens the Instrument editor for the selected instrument.","title":"Edit"},{"location":"interface/menus/module/","text":"Module Previous song Changes the current song to the previous one in the list. Next song Changes the current song to the next one in the list. Comments... Shows the Comments dialog for editing the module's comments. Module properties... Shows the Module properties dialog for editing the module's settings such as: The song list Artist information The framerate","title":"Module"},{"location":"interface/menus/module/#module","text":"","title":"Module"},{"location":"interface/menus/module/#previous-song","text":"Changes the current song to the previous one in the list.","title":"Previous song"},{"location":"interface/menus/module/#next-song","text":"Changes the current song to the next one in the list.","title":"Next song"},{"location":"interface/menus/module/#comments","text":"Shows the Comments dialog for editing the module's comments.","title":"Comments..."},{"location":"interface/menus/module/#module-properties","text":"Shows the Module properties dialog for editing the module's settings such as: The song list Artist information The framerate","title":"Module properties..."},{"location":"interface/menus/song/","text":"Song Insert order row Inserts a new order at the current pattern. The inserted row contains the next unused track for each channel in the song. Remove order row Removes the order row for the current pattern. Duplicate order row Inserts a copy of the order row of the current pattern. Move order up Changes the song order by moving the current order row up 1 row. Move order down Changes the song order by moving the current order row down 1 row. Tempo calculator... Opens the Tempo calculator utility.","title":"Song"},{"location":"interface/menus/song/#song","text":"","title":"Song"},{"location":"interface/menus/song/#insert-order-row","text":"Inserts a new order at the current pattern. The inserted row contains the next unused track for each channel in the song.","title":"Insert order row"},{"location":"interface/menus/song/#remove-order-row","text":"Removes the order row for the current pattern.","title":"Remove order row"},{"location":"interface/menus/song/#duplicate-order-row","text":"Inserts a copy of the order row of the current pattern.","title":"Duplicate order row"},{"location":"interface/menus/song/#move-order-up","text":"Changes the song order by moving the current order row up 1 row.","title":"Move order up"},{"location":"interface/menus/song/#move-order-down","text":"Changes the song order by moving the current order row down 1 row.","title":"Move order down"},{"location":"interface/menus/song/#tempo-calculator","text":"Opens the Tempo calculator utility.","title":"Tempo calculator..."},{"location":"interface/menus/tracker/","text":"Tracker Play Begins playing the song from the current pattern. Resumes normal play if the tracker was in step mode. Play from start Begins playing the song from the first pattern in the order. Play at cursor Begins playing the song from the cursor position. Step row Begins playing the song from the cursor position in step mode. Step mode plays a single row at a time. Stop Stops music playback. Pattern repeat Toggles pattern repeat mode. When pattern repeat mode is active, the tracker will loop playback of the current pattern. Pattern repeat can be toggled at any time. Record Toggles record mode. When record mode is active, pattern data can be edited. Follow-mode Toggles follow-mode. When follow-mode is active, the cursor row moves to the current row being played out. Toggle channel output Enables/Disables sound output for the cursor track. Solo Solos/Unsolos the cursor track. Solo'ing a track mutes all tracks except for the target track. Reset volume Resets the global volume scale to max on both terminals. The Jxy effect is persistent and is not reset when playing a new song. Use this action to reset it. See here for more details on the global volume scale. Kill sound Stops all sound output immediately. Differs from Stop in that sound stops immediately by not letting the playback buffer drain.","title":"Tracker"},{"location":"interface/menus/tracker/#tracker","text":"","title":"Tracker"},{"location":"interface/menus/tracker/#play","text":"Begins playing the song from the current pattern. Resumes normal play if the tracker was in step mode.","title":"Play"},{"location":"interface/menus/tracker/#play-from-start","text":"Begins playing the song from the first pattern in the order.","title":"Play from start"},{"location":"interface/menus/tracker/#play-at-cursor","text":"Begins playing the song from the cursor position.","title":"Play at cursor"},{"location":"interface/menus/tracker/#step-row","text":"Begins playing the song from the cursor position in step mode. Step mode plays a single row at a time.","title":"Step row"},{"location":"interface/menus/tracker/#stop","text":"Stops music playback.","title":"Stop"},{"location":"interface/menus/tracker/#pattern-repeat","text":"Toggles pattern repeat mode. When pattern repeat mode is active, the tracker will loop playback of the current pattern. Pattern repeat can be toggled at any time.","title":"Pattern repeat"},{"location":"interface/menus/tracker/#record","text":"Toggles record mode. When record mode is active, pattern data can be edited.","title":"Record"},{"location":"interface/menus/tracker/#follow-mode","text":"Toggles follow-mode. When follow-mode is active, the cursor row moves to the current row being played out.","title":"Follow-mode"},{"location":"interface/menus/tracker/#toggle-channel-output","text":"Enables/Disables sound output for the cursor track.","title":"Toggle channel output"},{"location":"interface/menus/tracker/#solo","text":"Solos/Unsolos the cursor track. Solo'ing a track mutes all tracks except for the target track.","title":"Solo"},{"location":"interface/menus/tracker/#reset-volume","text":"Resets the global volume scale to max on both terminals. The Jxy effect is persistent and is not reset when playing a new song. Use this action to reset it. See here for more details on the global volume scale.","title":"Reset volume"},{"location":"interface/menus/tracker/#kill-sound","text":"Stops all sound output immediately. Differs from Stop in that sound stops immediately by not letting the playback buffer drain.","title":"Kill sound"},{"location":"interface/menus/view/","text":"View History Shows the history dialog. The history dialog shows your undo/redo history. Toolbars Allows you to toggle the visibilty of any toolbar. Each toolbar in the menu has a check if it is visible. Reset layout Resets the layout of the instruments and waveforms panels to their default sizes.","title":"View"},{"location":"interface/menus/view/#view","text":"","title":"View"},{"location":"interface/menus/view/#history","text":"Shows the history dialog. The history dialog shows your undo/redo history.","title":"History"},{"location":"interface/menus/view/#toolbars","text":"Allows you to toggle the visibilty of any toolbar. Each toolbar in the menu has a check if it is visible.","title":"Toolbars"},{"location":"interface/menus/view/#reset-layout","text":"Resets the layout of the instruments and waveforms panels to their default sizes.","title":"Reset layout"},{"location":"interface/menus/waveforms/","text":"Waveforms Warning: All of these menu actions cannot be undone Add Adds a new waveform to the waveform table. The new waveform takes the id of the lowest available one. Remove Removes the selected waveform from the table. Duplicate Duplicates the selected waveform. Import Imports a waveform from a trackerboy waveform file (*.tbw). Note: This action is disabled because this feature is not available yet. Export Exports the selected waveform to a trackerboy waveform file (*.tbw). Note: This action is disabled because this feature is not available yet. Edit Opens the Waveform editor for the selected waveform.","title":"Waveforms"},{"location":"interface/menus/waveforms/#waveforms","text":"Warning: All of these menu actions cannot be undone","title":"Waveforms"},{"location":"interface/menus/waveforms/#add","text":"Adds a new waveform to the waveform table. The new waveform takes the id of the lowest available one.","title":"Add"},{"location":"interface/menus/waveforms/#remove","text":"Removes the selected waveform from the table.","title":"Remove"},{"location":"interface/menus/waveforms/#duplicate","text":"Duplicates the selected waveform.","title":"Duplicate"},{"location":"interface/menus/waveforms/#import","text":"Imports a waveform from a trackerboy waveform file (*.tbw). Note: This action is disabled because this feature is not available yet.","title":"Import"},{"location":"interface/menus/waveforms/#export","text":"Exports the selected waveform to a trackerboy waveform file (*.tbw). Note: This action is disabled because this feature is not available yet.","title":"Export"},{"location":"interface/menus/waveforms/#edit","text":"Opens the Waveform editor for the selected waveform.","title":"Edit"},{"location":"tracker/","text":"Overview This page is currently under construction.","title":"Overview"},{"location":"tracker/#overview","text":"This page is currently under construction.","title":"Overview"},{"location":"tracker/channel-lock/","text":"Channel locking The channel lock mechanism is how the tracker reserves channels for music use only. When a channel is locked , the tracker plays music by updating its sound registers. A channel that is unlocked is not being updated by the tracker and can be used for other purposes, such as sound effects. By default, all channels are locked for music playback. Locked to Unlocked When a channel is unlocked, its registers are cleared by writing zeros and its panning bit flags are also reset in NR51. Thus the channel is given a blank state when going from locked to unlocked. The tracker will also no longer update this channel's registers when playing music. Unlocked to Locked When an unlocked channel is locked again, its registers are updated with the current state from the current song being played. If there is no song being played, the registers are left untouched. Muting This mechanism is intented to be used for sound effects, but is also used for muting a channel. When a channel is muted, either by toggling the output or by soloing a channel, the channel is unlocked. Since unlocking the channel silences it by clearing its registers, this is essentially the same as muting it. To unmute, the channel is just locked again.","title":"Channel locking"},{"location":"tracker/channel-lock/#channel-locking","text":"The channel lock mechanism is how the tracker reserves channels for music use only. When a channel is locked , the tracker plays music by updating its sound registers. A channel that is unlocked is not being updated by the tracker and can be used for other purposes, such as sound effects. By default, all channels are locked for music playback.","title":"Channel locking"},{"location":"tracker/channel-lock/#locked-to-unlocked","text":"When a channel is unlocked, its registers are cleared by writing zeros and its panning bit flags are also reset in NR51. Thus the channel is given a blank state when going from locked to unlocked. The tracker will also no longer update this channel's registers when playing music.","title":"Locked to Unlocked"},{"location":"tracker/channel-lock/#unlocked-to-locked","text":"When an unlocked channel is locked again, its registers are updated with the current state from the current song being played. If there is no song being played, the registers are left untouched.","title":"Unlocked to Locked"},{"location":"tracker/channel-lock/#muting","text":"This mechanism is intented to be used for sound effects, but is also used for muting a channel. When a channel is muted, either by toggling the output or by soloing a channel, the channel is unlocked. Since unlocking the channel silences it by clearing its registers, this is essentially the same as muting it. To unmute, the channel is just locked again.","title":"Muting"},{"location":"tracker/effect-list/","text":"Effect list Below are all available effects. An effect is composed of a type and a parameter. Some effects do not require a parameter. Note that the effects below have similar syntax and function to Famitracker's effect set. 0xy - Arpeggio x - 1st note y - 2nd note The arpeggio effect simulates a chord by alternating each note in the chord every frame. The chord is made up of the current note and the effect's parameters. Each parameter is the number of semitones from the current note. The order of the arpeggio is the current note, calculated note from parameter x followed by the calculated note from parameter y. If a calculated note exceeds the highest, the highest will be used. Use 000 to turn off the effect. 1xx - Pitch slide up xx - speed, in pitch units / frame Modulates the channel's frequency upward using the given speed every frame. Note that the perceived change in frequency is not linear. Use 100 to turn off the effect. The effect will not increase the frequency past the channel's maximum. 2xx - Pitch slide down xx - speed, in pitch units / frame Same as 1xx but modulates the frequency downward. 3xx - Automatic Portamento xx - speed, in pitch units / frame Automatically slides to new notes with speed xx. Use 300 to disable the effect. 4xy - Square vibrato x - speed, number of frames per oscillation in pitch y - extent, in tune units Modulates the channel's frequency using a square vibrato. The channel's frequency alternates between +/- the extent ( y ). The speed, x , is the number of frames needed for a single oscillation (1: fastest, F: slowest). To disable, use an extent of 0 ( 4x0 ). 5xx - Set vibrato delay xx - delay, in frames The amount of frames to wait before starting the vibrato effect. By default, all channels have a vibrato delay of 0, or instantaneous vibrato. The delay starts on every note trigger. Bxx - Pattern goto xx - the index of the pattern Jumps to pattern xx in the order. If xx is >= the size of the order, the last pattern is used. The current row finishes playing before jumping to the pattern. If multiple effects of this type are used on the same row, the last one used is the one that gets performed. C00 - Pattern halt Stops playback of the song. Note that halting is immediate, the row the effect lies on is not performed. Dxx - Pattern skip xx - the row to start on Skips to the next pattern in the order and starts on row xx. If the current pattern is the last one in the order, the first pattern in the order is jumped to. Similar to Bxx, the current row finishes playing before jumping. Fxx - Set speed xx - the speed, in Q4.4 format Changes the playback speed. The parameter is in Q4.4 format and must be in range 1.0 and 15.0, inclusive. For more details on how speed works in trackerboy, see the speed page. Exx - Set envelope xx - the envelope Sets the channel's envelope setting. The type of this setting depends on the channel the effect is used. For CH3: Changes the current waveform in use. For CH1, CH2 and CH4: Changes the channel's volume envelope. The volume envelope parameter is composed of two nibbles - initial volume and mode. The initial volume is the starting volume of the envelope and ranges from 0-F. The mode determines the direction and speed of the envelope. A mode of 1-7 attenuates with 1 being the fastest. A mode of 9-F amplifies with 9 being the fastest. A mode of 0 or 8 is constant volume. Gxx - Note delay xx - number of frames to delay the note Delays performance of the row by a given number of frames. If a non-empty row is encountered before the delay expires, the delayed row is not performed. Hxx - Set sweep register xx - value to set Sets the sweep register (NR10) to the given value. Can only be used on CH1. The sweep register is written, CH1 is retriggered and then the sweep register is cleared. For an overview on the sweep register see Frequency sweep . I0x - Set channel panning x - panning to set Sets the channel's panning to x. Valid values for x are 0 (mute), 1 (left), 2 (right) and 3 (middle). Using this effect may result in a \"pop\" sound due to a change in the DC offset. Jxy - Set global volume x - volume of left terminal (0-7) y - volume of right terminal (0-7) Sets the global volume scale. This effect writes to the NR50 register. Note that a volume of 0 is not mute. By default, both terminals have a volume of 7. Warning: This effects the volume of both music and SFX. L00 - Lock channel (music priority) This effect is currently not implemented. Pxx - Fine tuning xx - tune offset in pitch units Sets a constant pitch offset for the track. The parameter is in biased representation with K = 0x80. A parameter of 0x80 means the track is in tune or has no pitch offset. A parameter of 81 means that the track is pitch adjusted by +1. By default, all tracks have a tune setting of 0x80. Qxy - Note slide up x - slide speed, in pitch units / frame y - semitones from the current note to slide to Sets a triggered note slide for the current track. The track's frequency will slide towards the frequency of the note calculated from adding y semitones to the current note. The x parameter is the speed of the slide, in pitch units per frame + 1 (0 is the slowest speed and F is the fastest). If the targeted note exceeds the highest possible one (B-8), then the highest will be used instead. Rxy - Note slide down x - slide speed, in pitch units / frame y - semitones from the current note to slide to Same as Qxy , except the targeted note is the current note minus y semitones. If the targeted note is less than the lowest, the lowest is used instead. Sxx - Delayed note cut xx - delay, in frames Cuts the note in a given number of frames. Can be combined with Gxx . Txx - Play sound effect xx - sound effect id to play This effect is not currently implemented. V0x - Set channel timbre x - timbre to set Sets the channel's timbre. Timbre is a setting specific to a channel. For CH1, CH2: Duty setting: 0 - 12.5% Duty 1 - 25% Duty 2 - 50% Duty 3 - 75% Duty (default) For CH3: Wave volume: 0 - Mute 1 - 25% volume 2 - 50% volume 3 - 100% volume (default) For CH4: Step-width of the LFSR: 0 - 15-bit LFSR (default) 1 - 7-bit LFSR","title":"Effect list"},{"location":"tracker/effect-list/#effect-list","text":"Below are all available effects. An effect is composed of a type and a parameter. Some effects do not require a parameter. Note that the effects below have similar syntax and function to Famitracker's effect set.","title":"Effect list"},{"location":"tracker/effect-list/#0xy-arpeggio","text":"x - 1st note y - 2nd note The arpeggio effect simulates a chord by alternating each note in the chord every frame. The chord is made up of the current note and the effect's parameters. Each parameter is the number of semitones from the current note. The order of the arpeggio is the current note, calculated note from parameter x followed by the calculated note from parameter y. If a calculated note exceeds the highest, the highest will be used. Use 000 to turn off the effect.","title":"0xy - Arpeggio"},{"location":"tracker/effect-list/#1xx-pitch-slide-up","text":"xx - speed, in pitch units / frame Modulates the channel's frequency upward using the given speed every frame. Note that the perceived change in frequency is not linear. Use 100 to turn off the effect. The effect will not increase the frequency past the channel's maximum.","title":"1xx - Pitch slide up"},{"location":"tracker/effect-list/#2xx-pitch-slide-down","text":"xx - speed, in pitch units / frame Same as 1xx but modulates the frequency downward.","title":"2xx - Pitch slide down"},{"location":"tracker/effect-list/#3xx-automatic-portamento","text":"xx - speed, in pitch units / frame Automatically slides to new notes with speed xx. Use 300 to disable the effect.","title":"3xx - Automatic Portamento"},{"location":"tracker/effect-list/#4xy-square-vibrato","text":"x - speed, number of frames per oscillation in pitch y - extent, in tune units Modulates the channel's frequency using a square vibrato. The channel's frequency alternates between +/- the extent ( y ). The speed, x , is the number of frames needed for a single oscillation (1: fastest, F: slowest). To disable, use an extent of 0 ( 4x0 ).","title":"4xy - Square vibrato"},{"location":"tracker/effect-list/#5xx-set-vibrato-delay","text":"xx - delay, in frames The amount of frames to wait before starting the vibrato effect. By default, all channels have a vibrato delay of 0, or instantaneous vibrato. The delay starts on every note trigger.","title":"5xx - Set vibrato delay"},{"location":"tracker/effect-list/#bxx-pattern-goto","text":"xx - the index of the pattern Jumps to pattern xx in the order. If xx is >= the size of the order, the last pattern is used. The current row finishes playing before jumping to the pattern. If multiple effects of this type are used on the same row, the last one used is the one that gets performed.","title":"Bxx - Pattern goto"},{"location":"tracker/effect-list/#c00-pattern-halt","text":"Stops playback of the song. Note that halting is immediate, the row the effect lies on is not performed.","title":"C00 - Pattern halt"},{"location":"tracker/effect-list/#dxx-pattern-skip","text":"xx - the row to start on Skips to the next pattern in the order and starts on row xx. If the current pattern is the last one in the order, the first pattern in the order is jumped to. Similar to Bxx, the current row finishes playing before jumping.","title":"Dxx - Pattern skip"},{"location":"tracker/effect-list/#fxx-set-speed","text":"xx - the speed, in Q4.4 format Changes the playback speed. The parameter is in Q4.4 format and must be in range 1.0 and 15.0, inclusive. For more details on how speed works in trackerboy, see the speed page.","title":"Fxx - Set speed"},{"location":"tracker/effect-list/#exx-set-envelope","text":"xx - the envelope Sets the channel's envelope setting. The type of this setting depends on the channel the effect is used.","title":"Exx - Set envelope"},{"location":"tracker/effect-list/#for-ch3","text":"Changes the current waveform in use.","title":"For CH3:"},{"location":"tracker/effect-list/#for-ch1-ch2-and-ch4","text":"Changes the channel's volume envelope. The volume envelope parameter is composed of two nibbles - initial volume and mode. The initial volume is the starting volume of the envelope and ranges from 0-F. The mode determines the direction and speed of the envelope. A mode of 1-7 attenuates with 1 being the fastest. A mode of 9-F amplifies with 9 being the fastest. A mode of 0 or 8 is constant volume.","title":"For CH1, CH2 and CH4:"},{"location":"tracker/effect-list/#gxx-note-delay","text":"xx - number of frames to delay the note Delays performance of the row by a given number of frames. If a non-empty row is encountered before the delay expires, the delayed row is not performed.","title":"Gxx - Note delay"},{"location":"tracker/effect-list/#hxx-set-sweep-register","text":"xx - value to set Sets the sweep register (NR10) to the given value. Can only be used on CH1. The sweep register is written, CH1 is retriggered and then the sweep register is cleared. For an overview on the sweep register see Frequency sweep .","title":"Hxx - Set sweep register"},{"location":"tracker/effect-list/#i0x-set-channel-panning","text":"x - panning to set Sets the channel's panning to x. Valid values for x are 0 (mute), 1 (left), 2 (right) and 3 (middle). Using this effect may result in a \"pop\" sound due to a change in the DC offset.","title":"I0x - Set channel panning"},{"location":"tracker/effect-list/#jxy-set-global-volume","text":"x - volume of left terminal (0-7) y - volume of right terminal (0-7) Sets the global volume scale. This effect writes to the NR50 register. Note that a volume of 0 is not mute. By default, both terminals have a volume of 7. Warning: This effects the volume of both music and SFX.","title":"Jxy - Set global volume"},{"location":"tracker/effect-list/#l00-lock-channel-music-priority","text":"This effect is currently not implemented.","title":"L00 - Lock channel (music priority)"},{"location":"tracker/effect-list/#pxx-fine-tuning","text":"xx - tune offset in pitch units Sets a constant pitch offset for the track. The parameter is in biased representation with K = 0x80. A parameter of 0x80 means the track is in tune or has no pitch offset. A parameter of 81 means that the track is pitch adjusted by +1. By default, all tracks have a tune setting of 0x80.","title":"Pxx - Fine tuning"},{"location":"tracker/effect-list/#qxy-note-slide-up","text":"x - slide speed, in pitch units / frame y - semitones from the current note to slide to Sets a triggered note slide for the current track. The track's frequency will slide towards the frequency of the note calculated from adding y semitones to the current note. The x parameter is the speed of the slide, in pitch units per frame + 1 (0 is the slowest speed and F is the fastest). If the targeted note exceeds the highest possible one (B-8), then the highest will be used instead.","title":"Qxy - Note slide up"},{"location":"tracker/effect-list/#rxy-note-slide-down","text":"x - slide speed, in pitch units / frame y - semitones from the current note to slide to Same as Qxy , except the targeted note is the current note minus y semitones. If the targeted note is less than the lowest, the lowest is used instead.","title":"Rxy - Note slide down"},{"location":"tracker/effect-list/#sxx-delayed-note-cut","text":"xx - delay, in frames Cuts the note in a given number of frames. Can be combined with Gxx .","title":"Sxx - Delayed note cut"},{"location":"tracker/effect-list/#txx-play-sound-effect","text":"xx - sound effect id to play This effect is not currently implemented.","title":"Txx - Play sound effect"},{"location":"tracker/effect-list/#v0x-set-channel-timbre","text":"x - timbre to set Sets the channel's timbre. Timbre is a setting specific to a channel.","title":"V0x - Set channel timbre"},{"location":"tracker/effect-list/#for-ch1-ch2","text":"Duty setting: 0 - 12.5% Duty 1 - 25% Duty 2 - 50% Duty 3 - 75% Duty (default)","title":"For CH1, CH2:"},{"location":"tracker/effect-list/#for-ch3_1","text":"Wave volume: 0 - Mute 1 - 25% volume 2 - 50% volume 3 - 100% volume (default)","title":"For CH3:"},{"location":"tracker/effect-list/#for-ch4","text":"Step-width of the LFSR: 0 - 15-bit LFSR (default) 1 - 7-bit LFSR","title":"For CH4:"},{"location":"tracker/glossary/","text":"Glossary This page is currently under construction.","title":"Glossary"},{"location":"tracker/glossary/#glossary","text":"This page is currently under construction.","title":"Glossary"},{"location":"tracker/instruments/","text":"Instruments Instruments in Trackerboy consists of sequences that modulate a certain parameter once per frame. Sequences are essentially the same as what other trackers/drivers call macros. Instruments in Trackerboy are generic, and can be used on any channel. Assigning a channel to an instrument is for organization and previewing purposes only. Instruments in a module are stored in a table, which can have up to 64 items. The id of an instrument is its 6-bit index in this table, which is referenced in track data. Each instrument has a sequence for the following parameters: Arpeggio Panning Pitch Timbre Example sequences will be provided throughout this page like this: [1 | 2 3] . The sequence data will be within the square brackets and a loop index (if present) will be specified with the | character. Arpeggio This sequence modulates the current note. Each value in the sequence is a relative semitone offset that will change the current note being played. Using this sequence with a loop index allows for more advanced arpeggios than the 0xy effect. The 0xy effect is equivalent to using a sequence of [| 0 x y] where x and y are the effect parameters. Panning This sequence modulates the channel's panning. It functions similarly to the I0x effect. Values in this sequence should range from 0 to 3 for mute, left, right and middle, respectively. Example uses: A sequence of 1 value to just set the panning Setting the panning to mute at the end of the sequence for frame timed cuts Alternating between left and right for an echo effect Pitch This sequence modulates the channel's frequency. Each channel has a counter that is modified by the current instrument's pitch sequence. This counter value is added when calculating the frequency. Each value in the sequence adds to this counter. For example consider this sequence: [1 1 -1 -1] On frame 0, the counter is now 0 + 1 = 1 and the frequency is offset by 1 On frame 1, the counter is now 1 + 1 = 2 and the frequency is offset by 2 On frame 2, the counter is now 2 + -1 = 1 and the frequency is offset by 1 On frame 3 (and onward) the counter is now 1 + -1 = 0 and the frequency is offset by 0 If we add a loop index at 0, we have created a simple triangle vibrato effect that alternates from 0 to 2. To have a triangle vibrato that alternates from -2 to 2 use this: [-2 | 1 1 1 1 -1 -1 -1 -1] To add a downward slide do this: [-2 | 1 1 1 1 -1 -1 -1 -1 -1] Timbre This sequence modulates the channel's timbre. Channel timbre is a channel-specific setting. For pulse channels it is duty, for the wave channel it's the volume and for the noise channel it's the step-width. Using a timbre sequence has a similar effect to using the V0x effect. Values in this sequence should range from 0 to 3. Example uses: Using this sequence on a pulse channel allows you to do PWM (pulse width modulation). Use a 7-bit LFSR instead of the default 15-bit on the noise channel. Can be used for frame timed cuts on wave channel by having a 0 at the end of the sequence. Loops Sequences can be looped by specifying a loop index. The sequence will loop back to this index when it reaches the end.","title":"Instruments"},{"location":"tracker/instruments/#instruments","text":"Instruments in Trackerboy consists of sequences that modulate a certain parameter once per frame. Sequences are essentially the same as what other trackers/drivers call macros. Instruments in Trackerboy are generic, and can be used on any channel. Assigning a channel to an instrument is for organization and previewing purposes only. Instruments in a module are stored in a table, which can have up to 64 items. The id of an instrument is its 6-bit index in this table, which is referenced in track data. Each instrument has a sequence for the following parameters: Arpeggio Panning Pitch Timbre Example sequences will be provided throughout this page like this: [1 | 2 3] . The sequence data will be within the square brackets and a loop index (if present) will be specified with the | character.","title":"Instruments"},{"location":"tracker/instruments/#arpeggio","text":"This sequence modulates the current note. Each value in the sequence is a relative semitone offset that will change the current note being played. Using this sequence with a loop index allows for more advanced arpeggios than the 0xy effect. The 0xy effect is equivalent to using a sequence of [| 0 x y] where x and y are the effect parameters.","title":"Arpeggio"},{"location":"tracker/instruments/#panning","text":"This sequence modulates the channel's panning. It functions similarly to the I0x effect. Values in this sequence should range from 0 to 3 for mute, left, right and middle, respectively. Example uses: A sequence of 1 value to just set the panning Setting the panning to mute at the end of the sequence for frame timed cuts Alternating between left and right for an echo effect","title":"Panning"},{"location":"tracker/instruments/#pitch","text":"This sequence modulates the channel's frequency. Each channel has a counter that is modified by the current instrument's pitch sequence. This counter value is added when calculating the frequency. Each value in the sequence adds to this counter. For example consider this sequence: [1 1 -1 -1] On frame 0, the counter is now 0 + 1 = 1 and the frequency is offset by 1 On frame 1, the counter is now 1 + 1 = 2 and the frequency is offset by 2 On frame 2, the counter is now 2 + -1 = 1 and the frequency is offset by 1 On frame 3 (and onward) the counter is now 1 + -1 = 0 and the frequency is offset by 0 If we add a loop index at 0, we have created a simple triangle vibrato effect that alternates from 0 to 2. To have a triangle vibrato that alternates from -2 to 2 use this: [-2 | 1 1 1 1 -1 -1 -1 -1] To add a downward slide do this: [-2 | 1 1 1 1 -1 -1 -1 -1 -1]","title":"Pitch"},{"location":"tracker/instruments/#timbre","text":"This sequence modulates the channel's timbre. Channel timbre is a channel-specific setting. For pulse channels it is duty, for the wave channel it's the volume and for the noise channel it's the step-width. Using a timbre sequence has a similar effect to using the V0x effect. Values in this sequence should range from 0 to 3. Example uses: Using this sequence on a pulse channel allows you to do PWM (pulse width modulation). Use a 7-bit LFSR instead of the default 15-bit on the noise channel. Can be used for frame timed cuts on wave channel by having a 0 at the end of the sequence.","title":"Timbre"},{"location":"tracker/instruments/#loops","text":"Sequences can be looped by specifying a loop index. The sequence will loop back to this index when it reaches the end.","title":"Loops"},{"location":"tracker/octave-range/","text":"Octave range and notes Notes in Trackerboy range from octaves 2 to 8. Scientific pitch notation (SPN) is used, with C-2 being approximately 64 Hz. Valid notes range from C-2 to B-8, inclusive, for channels 1-3. Valid notes on channel 4 range from C-2 to B-6, inclusive. Attempting to use a note outside this range will result in the note being clamped to its respective boundary. Channel frequency Each channel has a frequency setting. Frequency in channels 1-3 is an 11-bit number (0-2047) with 0 being the lowest and 2047 being the highest. Frequency in channel 4 is a byte, with a specific format explained here . Notes in Trackerboy are mapped to specific frequencies using a table lookup. See below for the tables used. Channel 1-3 Frequency table Octave C C# D D# E F F# G G# A A# B 2 0x02C 0x09D 0x107 0x16B 0x1CA 0x223 0x277 0x2C7 0x312 0x358 0x39B 0x3DA 3 0x416 0x44E 0x483 0x4B5 0x4E5 0x511 0x53C 0x563 0x589 0x5AC 0x5CE 0x5ED 4 0x60B 0x627 0x642 0x65B 0x672 0x689 0x69E 0x6B2 0x6C4 0x6D6 0x6E7 0x6F7 5 0x706 0x714 0x721 0x72D 0x739 0x744 0x74F 0x759 0x762 0x76B 0x773 0x77B 6 0x783 0x78A 0x790 0x797 0x79D 0x7A2 0x7A7 0x7AC 0x7B1 0x7B6 0x7BA 0x7BE 7 0x7C1 0x7C5 0x7C8 0x7CB 0x7CE 0x7D1 0x7D4 0x7D6 0x7D9 0x7DB 0x7DD 0x7DF 8 0x7E1 0x7E2 0x7E4 0x7E6 0x7E7 0x7E9 0x7EA 0x7EB 0x7EC 0x7ED 0x7EE 0x7EF Channel 4 Frequency table Octave C C# D D# E F F# G G# A A# B 2 0xD7 0xD6 0xD5 0xD4 0xC7 0xC6 0xC5 0xC4 0xB7 0xB6 0xB5 0xB4 3 0xA7 0xA6 0xA5 0xA4 0x97 0x96 0x95 0x94 0x87 0x86 0x85 0x84 4 0x77 0x76 0x75 0x74 0x67 0x66 0x65 0x64 0x57 0x56 0x55 0x54 5 0x47 0x46 0x45 0x44 0x37 0x36 0x35 0x34 0x27 0x26 0x25 0x24 6 0x17 0x16 0x15 0x14 0x07 0x06 0x05 0x04 0x03 0x02 0x01 0x00","title":"Octave range and notes"},{"location":"tracker/octave-range/#octave-range-and-notes","text":"Notes in Trackerboy range from octaves 2 to 8. Scientific pitch notation (SPN) is used, with C-2 being approximately 64 Hz. Valid notes range from C-2 to B-8, inclusive, for channels 1-3. Valid notes on channel 4 range from C-2 to B-6, inclusive. Attempting to use a note outside this range will result in the note being clamped to its respective boundary.","title":"Octave range and notes"},{"location":"tracker/octave-range/#channel-frequency","text":"Each channel has a frequency setting. Frequency in channels 1-3 is an 11-bit number (0-2047) with 0 being the lowest and 2047 being the highest. Frequency in channel 4 is a byte, with a specific format explained here . Notes in Trackerboy are mapped to specific frequencies using a table lookup. See below for the tables used.","title":"Channel frequency"},{"location":"tracker/octave-range/#channel-1-3-frequency-table","text":"Octave C C# D D# E F F# G G# A A# B 2 0x02C 0x09D 0x107 0x16B 0x1CA 0x223 0x277 0x2C7 0x312 0x358 0x39B 0x3DA 3 0x416 0x44E 0x483 0x4B5 0x4E5 0x511 0x53C 0x563 0x589 0x5AC 0x5CE 0x5ED 4 0x60B 0x627 0x642 0x65B 0x672 0x689 0x69E 0x6B2 0x6C4 0x6D6 0x6E7 0x6F7 5 0x706 0x714 0x721 0x72D 0x739 0x744 0x74F 0x759 0x762 0x76B 0x773 0x77B 6 0x783 0x78A 0x790 0x797 0x79D 0x7A2 0x7A7 0x7AC 0x7B1 0x7B6 0x7BA 0x7BE 7 0x7C1 0x7C5 0x7C8 0x7CB 0x7CE 0x7D1 0x7D4 0x7D6 0x7D9 0x7DB 0x7DD 0x7DF 8 0x7E1 0x7E2 0x7E4 0x7E6 0x7E7 0x7E9 0x7EA 0x7EB 0x7EC 0x7ED 0x7EE 0x7EF","title":"Channel 1-3 Frequency table"},{"location":"tracker/octave-range/#channel-4-frequency-table","text":"Octave C C# D D# E F F# G G# A A# B 2 0xD7 0xD6 0xD5 0xD4 0xC7 0xC6 0xC5 0xC4 0xB7 0xB6 0xB5 0xB4 3 0xA7 0xA6 0xA5 0xA4 0x97 0x96 0x95 0x94 0x87 0x86 0x85 0x84 4 0x77 0x76 0x75 0x74 0x67 0x66 0x65 0x64 0x57 0x56 0x55 0x54 5 0x47 0x46 0x45 0x44 0x37 0x36 0x35 0x34 0x27 0x26 0x25 0x24 6 0x17 0x16 0x15 0x14 0x07 0x06 0x05 0x04 0x03 0x02 0x01 0x00","title":"Channel 4 Frequency table"},{"location":"tracker/sfx/","text":"Sound effects This is an upcoming feature for Trackerboy and is not documented yet. Stay tuned!","title":"Sound effects (TBD)"},{"location":"tracker/sfx/#sound-effects","text":"This is an upcoming feature for Trackerboy and is not documented yet. Stay tuned!","title":"Sound effects"},{"location":"tracker/speed/","text":"Speed/Tempo Speed refers to the rate at which rows are performed by the tracker. It can also be thought as the tempo of the song. This page will explain how speed works in Trackerboy. The playback speed of a song is determined by the global speed setting. This setting is initialized by the song's speed setting and can be changed during playback with the Fxx effect. This setting determines the number of frames each row gets when playing. Fixed point is the format of this setting with 4 bits for the integral and 4 bits for the fraction (Q4.4). For more details on fixed point see Q-format . In other words, the speed setting is composed of two hex nibbles. The first nibble being the integral, or the whole number of frames each row gets. The second nibble is the fraction, which determines how often some rows get an extra frame. Valid speeds range from 1.0 to 15.0 (0x10 to 0xF0), inclusive. Speed 1.0, unit speed, is the fastest and 15.0 is the slowest. The default speed for new songs is 6.0 (0x60). Whole-number speed For speeds where each row gets the same number of frames, use x0 where x is a hex digit 1-F being the number of frames. Fractional speed When the fractional component of the speed is nonzero, some rows will play for an extra frame. The ratio of rows that get an extra is determined by the fraction. For example, a fractional component of 1/2 ( x8 ), means that 1 of every 2 rows will get an extra frame. Whereas a component of 1/4 ( x4 ) means that 1 of every 4 rows will get an extra frame. Tempo Using the speed setting, we can determine what the tempo of the song is. We can also determine a speed setting for any given tempo. Speed to tempo calculation We can convert a speed to a tempo using the following formula: tempo = {{60 * framerate} \\over {speed * rpb}} Definitions framerate - the rate the tracker is updated, typically the vblank interval (59.7 Hz) tempo - the pace of a song, measured in beats per min (bpm) rpb - acronym for rows per beat. This value determines the number of rows a single beat requires. speed - the number of ticks a row is performed for, measured in frames per row (fpr) Examples When rpb = 4 , speed = 2.5 , framerate = 59.7 tempo = {{60 * 59.7} \\over {2.5 * 4}} = {3582 \\over 10} = 358.2 bpm Tempo to speed calculation We can also estimate a speed from any given tempo using a similar formula: speed = {{60 * framerate} \\over {tempo * rpb}} Examples When rpb = 8 , tempo = 170 , framerate = 59.7 speed = { {60 * 59.7} \\over {8 * 170}} = { 3582 \\over 1360 } = 2.634 \\approx 2.625 {fpr} Note that we cannot represent 2.634 using Q4.4 so the closest value is 2.625 or 0x2A. If we calculate the tempo using this speed value we get 170.571 bpm. Some tempos, like this example, cannot be accurately represented by our speed setting. Tempo calculator These calculations are provided as an example. When using Trackerboy you do not need to do these calculations yourself, simply use the Tempo calculator utility (Song > Tempo calculator...) instead.","title":"Speed/Tempo"},{"location":"tracker/speed/#speedtempo","text":"Speed refers to the rate at which rows are performed by the tracker. It can also be thought as the tempo of the song. This page will explain how speed works in Trackerboy. The playback speed of a song is determined by the global speed setting. This setting is initialized by the song's speed setting and can be changed during playback with the Fxx effect. This setting determines the number of frames each row gets when playing. Fixed point is the format of this setting with 4 bits for the integral and 4 bits for the fraction (Q4.4). For more details on fixed point see Q-format . In other words, the speed setting is composed of two hex nibbles. The first nibble being the integral, or the whole number of frames each row gets. The second nibble is the fraction, which determines how often some rows get an extra frame. Valid speeds range from 1.0 to 15.0 (0x10 to 0xF0), inclusive. Speed 1.0, unit speed, is the fastest and 15.0 is the slowest. The default speed for new songs is 6.0 (0x60).","title":"Speed/Tempo"},{"location":"tracker/speed/#whole-number-speed","text":"For speeds where each row gets the same number of frames, use x0 where x is a hex digit 1-F being the number of frames.","title":"Whole-number speed"},{"location":"tracker/speed/#fractional-speed","text":"When the fractional component of the speed is nonzero, some rows will play for an extra frame. The ratio of rows that get an extra is determined by the fraction. For example, a fractional component of 1/2 ( x8 ), means that 1 of every 2 rows will get an extra frame. Whereas a component of 1/4 ( x4 ) means that 1 of every 4 rows will get an extra frame.","title":"Fractional speed"},{"location":"tracker/speed/#tempo","text":"Using the speed setting, we can determine what the tempo of the song is. We can also determine a speed setting for any given tempo.","title":"Tempo"},{"location":"tracker/speed/#speed-to-tempo-calculation","text":"We can convert a speed to a tempo using the following formula: tempo = {{60 * framerate} \\over {speed * rpb}}","title":"Speed to tempo calculation"},{"location":"tracker/speed/#definitions","text":"framerate - the rate the tracker is updated, typically the vblank interval (59.7 Hz) tempo - the pace of a song, measured in beats per min (bpm) rpb - acronym for rows per beat. This value determines the number of rows a single beat requires. speed - the number of ticks a row is performed for, measured in frames per row (fpr)","title":"Definitions"},{"location":"tracker/speed/#examples","text":"When rpb = 4 , speed = 2.5 , framerate = 59.7 tempo = {{60 * 59.7} \\over {2.5 * 4}} = {3582 \\over 10} = 358.2 bpm","title":"Examples"},{"location":"tracker/speed/#tempo-to-speed-calculation","text":"We can also estimate a speed from any given tempo using a similar formula: speed = {{60 * framerate} \\over {tempo * rpb}}","title":"Tempo to speed calculation"},{"location":"tracker/speed/#examples_1","text":"When rpb = 8 , tempo = 170 , framerate = 59.7 speed = { {60 * 59.7} \\over {8 * 170}} = { 3582 \\over 1360 } = 2.634 \\approx 2.625 {fpr} Note that we cannot represent 2.634 using Q4.4 so the closest value is 2.625 or 0x2A. If we calculate the tempo using this speed value we get 170.571 bpm. Some tempos, like this example, cannot be accurately represented by our speed setting.","title":"Examples"},{"location":"tracker/speed/#tempo-calculator","text":"These calculations are provided as an example. When using Trackerboy you do not need to do these calculations yourself, simply use the Tempo calculator utility (Song > Tempo calculator...) instead.","title":"Tempo calculator"}]}